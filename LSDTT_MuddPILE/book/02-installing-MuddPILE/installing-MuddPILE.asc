== Installing MuddPILE
 
MuddPILE is written in pass:[c++] and distributed as source code so you need to compile it. Instructions are below. 

=== Prerequisites

Firstly, this code was developed in Linux and it is a lot easer to install in Linux systems than other systems. Do you not run Linux? *Nae problem.* If you install https://www.virtualbox.org/[virtual box] and https://www.vagrantup.com/[vagrant] **in that order** you can have a nice little Linux machine happily running away on whatever computer you are currently using. http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_using_virtualbox_and_vagrant[We have documentation explaining how to do this elsewhere].

. First you need all the GNU pass:[c++] tools and make. But basically every Linux operating system has this so don't worry about it. 
. Second, you need something called FFTW. If you already installed [LSDTopoTools] it is already on your computer. If not, install it like this (this is for Ubuntu, if you've not got `apt-get` then try `yum` or `dnf` on the RHEL or Fedora flavours of Linux):
+
[source,console]
----
$ sudo apt-get install -y libfftw3-dev
----


=== Getting the code and installing

. We are going to assume that you are using the *LSDTopoTools* vagrant setup. You can read about that http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_using_virtualbox_and_vagrant[in the LSDTopoTools book]. You can do this on your own linux operating system but you will have to adjust the directory names accordingly. 

. Navigate to the `Git_projects` directory in your linux machine (that means using https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html[putty.exe] to https://en.wikipedia.org/wiki/Secure_Shell[ssh] into the machine. If you don't know what any of that means http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_using_virtualbox_and_vagrant[read setup section of the the book]). 

. Now clone the *MuddPILE* repository:
+
[source,console]
----
$ cd /LSDTopoTools/Git_projects
$ git clone https://github.com/LSDtopotools/MuddPILE.git
----
+
. Before you compile the code, you need to decompress the http://www.boost.org/[boost] and http://www.simunova.com/mtl4[mtl4] libraries. We have packaged these up for you so our *MuddPILE* distribution is self-contained. To unzip, go into the `boost_mtl_minimal` directory and unzip using `tar`:
+
[source,console]
----
$ cd MuddPILE/boost_mtl_minimal
$ tar -xvzf boost_mtl_minimal.tar.gz
----
+
Unzipping this might take a wee while. Note if you don't want `tar` to print all the information about the files being zipped use `tar -xzf` (the `v` flag is for `verbose`).
. Now, go into the /`src/driver_functions/` directory and make the program:
+
[source,console]
----
$ cd /LSDTopoTools/Git_projects/MuddPILE/src/driver_functions
$ make -f MuddPILEdriver.make
----
+
. The result will be a program called `MuddPILEdriver.out`: this is the model! You can now run landscape evolution runs. Check back here for documentation on actually running the model (we hope to have documentation ready by end September 2017).

=== Visualisation

The output of MuddPILE is primarily raster files, in https://www.harrisgeospatial.com/docs/ENVIImageFiles.html[ENVI bil] format (*NOT ESRI BIL*), which can be read by GIS software such as http://www.qgis.org/en/site/[QGIS].

We have also developed a number of python tools for plotting *LSDTopoTools* and *MuddPILE* output. These are located in the repository https://github.com/LSDtopotools/LSDMappingTools[LSDMappingTools]. 

==== Using our python plotting tools

Our typical setup involves creating an Ubuntu operating system using vagrant within your host machine. If that sentence read like a foreign language, http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_using_virtualbox_and_vagrant[read our setup instructions].

However, for our python tools, we recommend using your host operating system, because:

* The Ubuntu system that you create using vagrant has no windowing system, so you cannot use an interactive python development environment like https://pythonhosted.org/spyder/[spyder]
* Our testing has found that sometimes our python setup interferes with the gdal command line tools within our vagrant box. 

To get the correct enviroment for our plotting tools, you should follow these steps:

. Download and install http://conda.pydata.org/miniconda.html[miniconda] on your host machine. Our tools should theoreticaly work on python 3 or 2.7, but the code has only been rigourously tested on python 2.7. 
. In windows, open a command prompt (use the start menu to search for *cmd.exe*). In linux or MacOS use a terminal window. 
. Get our  https://raw.githubusercontent.com/LSDtopotools/LSDMappingTools/a1e4bd94911afc25a10ed2482553736bc2ce8894/environment.yml[environment file].
. Create the environment from that file with:
+
[source,console]
----
> conda env create -f environment.yml
----
+
I'm afraid this will take a little while. Actually it will take a very long time. Sorry. 
. Activate the environment:
+
[source,console]
----
> activate LSDTT
----

NOTE: This environment does not include *spyder*, you can install it with `conda install -n LSDTT spyder`
