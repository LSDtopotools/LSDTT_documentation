=== Second example: a landscape with both fluvial and hillslope processes. 

This example is similar to the previous example but in this case we turn hillslope processes on. You should see that the hillslopes begin to diffuse resulting in a lower drainage density. 

WARNING: Hillslope diffusion is much more complicated to solve and results in a far slower model run. 

. We call the program with
+
[source,console]
----
$ ./MuddPILEdriver.out /LSDTopoTools/Git_projects/MuddPILE/examples/basic_hillslope_and_fluvial basic_hillslope_and_fluvial.param
----
+
. As with the last run, this will produce a number of rasters.
+
* The raster with `9999` in the filename is the initial raster after running the diamond square algorithm. the parabola, and roughening the surface.  
* The raster with `9998` is the raster after running some initial fluvial incision. 
* All other filenames are time slices that show the evolution of the landscape under steady forcing. 
+
. For python visualisation (see previous example), run the script `Create_hillshade_series_in_directory.py` from the repository. *YOU WILL NEED TO ADJUST THE DIRECTORY NAME TO SUIT YOUR DIRECTORY STRUCTURE AND OPERATING SYSTEM*:
+
[source,console]
----
> python Create_hillshade_series_in_directory.py -dir C:\VagrantBoxes\LSDTopoTools\Git_projects\MuddPILE\examples\basic_hillslope_and_fluvial\ -fname basic_hillslope_and_fluvial -zmax 50
----
+
.Simple hillslope and fluvial landscape
image::images/simple_hillslope_and_fluvial.gif[A simple hillslope and fluvial landscape]

