
=== Getting our *LSDMappingTools* and other tools

Our vagrant setup has no graphical user interface (you only interact with it through a terminal) so we suggest using your host operating system for python. 

. You need to clone our repository https://github.com/LSDtopotools/LSDMappingTools[LSDMappingTools]. 
+
WARNING: At the moment https://github.com/LSDtopotools/LSDMappingTools[LSDMappingTools] is a complete mess. It currently serves as a bit of a sandbox for visualisation development. One day we will clean it all up and make a nice, pretty release. But for now I'm afraid you'll need to rely on this repository. 
+
. If you don't want to install https://git-scm.com/[git] on your host operating system, you can clone the repository from your vagrant machine. Because of the clever way vagrant works you will be able to use these files in you host operating system.
+
[source,console]
----
$ cd /LSDTopoTools/Git_projects
$ git clone https://github.com/LSDtopotools/LSDMappingTools.git
----
+
NOTE: In your host operating system these files will not be in `/LSDTopoTools/Git_projects`. They will be within the `VagrantBoxes\LSDTopoTools\Git_projects` directory (wherever you put it. On windows I put mine in the `C` directory). 
+
. Once you have this repository you can move on to our examples in the next chapter.

==== Ensuring you can use the tools

To use the tools you need to make sure that they are in your https://matplotlib.org/faq/environment_variables_faq.html[pythonpath]. You can do that for your current session with:

[source,python]
----
import sys

sys.path.append("PATH/TO/LSDMappingTools/")
----

=== A note on the test datasets

The examples in this section are all from the https://github.com/LSDtopotools/LSDMappingTools/tree/master/Tests[`Tests` folder in *LSDMappingTools*]. The raster datasets are all in ENVI bil format, which include a `bil` file and a `hdr` file. The 

* `WA.bil`: The topographic raster
* `WA_HS.bil`: hillshade
* `WA_AllBasins.bil`: A raster map of the basins
* `WA_all.csv`: A channel network generated by the `print_chi_data_maps: true` flag. See link:LSDTT_basic_usage.html#_getting_a_channel_network_with_more_information[*LSDTopoTools* basic usage documentation for details]
* A python script for testing some basic plots: `LSDMappingTools_test.py`

These datasets have all been generated by *LSDTopoTools*. You can read about how to generate them in the link:LSDTT_basic_usage.html[*LSDTopoTools* basic usage documentation].