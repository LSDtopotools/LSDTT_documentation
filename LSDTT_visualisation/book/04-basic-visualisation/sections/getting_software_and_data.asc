
=== Getting our LSDMappingTools and other tools

This repeats information from the <<Installing the LSDTopoTools python toolchain,python installation section>>. 

You can either use our https://hub.docker.com/r/lsdtopotools/lsdtt_viz_docker[Docker container] (easy) or install on your native system (more difficult and takes a long time).


==== Starting up in our docker container

. If you are using our docker implementation (this is recommended), start the container and go to the correct folder:
+
[source,console]
----
$ docker run -it -v C:\LSDTopoTools\:/LSDTopoTools lsdtopotools/lsdtt_viz_docker
# Start_LSDTT.sh
# cd /LSDTopoTools/LSDMappingTools/Tests
----


==== Starting up in a native python environment

. If you installed the LSDMT environment on your host machine:
+
[source,console]
----
> activate LSDTT
----
+
.. In windows you will need to be in a `cmd.exe` window.
.. In linux or MacOS you might need to type `source activate LSDTT` to get the environment to work. 
.. If the environment is loaded you should see it in parentheses before the command prompt, e.g., `(LSDTT) >` or `(LSDTT) $`. 
+
.. Navigate to the folder in the `LSDMappingTools` repository called `Tests`.
+
. Call the `LSDMappingTools_test.py` python script. This script is called with a single number: 1,2 or 3. These make different plots. 

=== A note on the test datasets

The examples in this section are all from the https://github.com/LSDtopotools/LSDMappingTools/tree/master/Tests[`Tests` folder in *LSDMappingTools*]. The raster datasets are all in ENVI bil format, which include a `bil` file and a `hdr` file. The 

* `WA.bil`: The topographic raster
* `WA_HS.bil`: hillshade
* `WA_AllBasins.bil`: A raster map of the basins
* `WA_all.csv`: A channel network generated by the `print_chi_data_maps: true` flag. See link:LSDTT_basic_usage.html#_getting_a_channel_network_with_more_information[*LSDTopoTools* basic usage documentation for details]
* A python script for testing some basic plots: `LSDMappingTools_test.py`

These datasets have all been generated by *LSDTopoTools*. You can read about how to generate them in the link:LSDTT_basic_usage.html[*LSDTopoTools* basic usage documentation].