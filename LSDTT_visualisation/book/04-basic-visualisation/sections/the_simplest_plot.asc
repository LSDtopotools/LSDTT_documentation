
=== Your first LSDMappingTools plots

The good news here is that installing the LSDTT python toolchain is more difficult than creating your first plot. If your python environment is working you are already most of the way there!

We will walk through this example using the command line. You need to use the operating system within which you installed the LSDTT python environment. If you don't know what that is read the <<Installing the LSDTopoTools python toolchain,installation section>>. 

The first plots are really just to test if your environemnt is working. But we will give you a bit of information about how the scripts work after you produce the plots. 

NOTE: The scripts here print figures to files; you will not see a window with a figure pop up. Instead, after you run the scripts, look in the `Tests` directory and open the `png` files. 


==== A basic draped hillshade

To begin, you must either be in our docker container or you must have activated our python environment on your host machine. If you don't know how to do that, read the installation instructions. 

The first test creates a very basic draped hillshade. The "drape" is an elevation raster draped over a hillshade. For obvious reasons it needs a elevation raster and a hillshade raster:

[source,console]
----
# python LSDMappingTools_test.py 1
----

.A simple draped hillshade
image::images/WA_hillshade.png[Draped hillshade,width=300]

==== A hillshade with some basins

This creates a very basic hillshade with some basins plotted. It needs the elevation, hillshade, and basin raster, and a `_BasinInfo.csv` file (all of which are included in the test data folder):

[source,console]
----
# python LSDMappingTools_test.py 1
----

.A simple draped hillshade
image::images/WA_coloured_basins.png[Some basins,width=300]


==== A hillshade with some channels

This creates a very hillshade with a channel network. The channels come from a csv file that is derived from a chi data map. You can read about how to generate these in our link:LSDTT_basic_usage.html#_more_advanced_options_in_lsdtt_basicmetrics[LSDTT basic analysis documentation].

[source,console]
----
# python LSDMappingTools_test.py 1
----

.A simple draped hillshade
image::images/WA_channels_by_basin.png[Channels over a hillshade,width=300]

==== What these basic plots do


To understand what these basic plots are doing, we will highlight some of the basic elements of the script. You should have a basic understanding of python. If you don't, we can recommend the extremely useful courses from either https://swcarpentry.github.io/python-novice-inflammation/[software carpentry] or https://www.codecademy.com/learn/learn-python[code academy]. 

Firstly, we are going to import a package called *LSDMapWrappers*. This is a small package that automates the most basic plots: simple draped hillshades, basin plots and channel plots. 

The lines of code below appear in the script `LSDMappingTools_test.py`.

[source,python]
----
import LSDMapWrappers as LSDMW
----

Later in the script there are a few options:

[source,python]
----
    if argv[0] == 1:
        print("Getting basic hillshade")
        LSDMW.SimpleHillshade(DataDir,DataFname)
    elif argv[0] == 2:
        print("Plotting some basins")
        LSDMW.PrintBasins(DataDir,DataFname)
    elif argv[0] == 3:
        print("Plotting the channels")
        LSDMW.PrintChannels(DataDir,DataFname) 
----

You should see here that there are various types of plots from https://github.com/LSDtopotools/LSDMappingTools/tree/master/LSDMapWrappers[*LSDMapWrappers*]. As it turns out each of these different basic plots has a number of options. For example, here is the code in  https://github.com/LSDtopotools/LSDMappingTools/tree/master/LSDMapWrappers[*LSDMapWrappers*]:

[source,python]
----
def SimpleHillshade(DataDirectory,Base_file, cmap = "jet", cbar_loc = "right", size_format = "ESURF", fig_format = "png", dpi = 250):
    """
    This function makes a shaded relief plot of the DEM with the basins coloured
    by the basin ID.
    Args:
        DataDirectory (str): the data directory with the m/n csv files
        Base_file (str): The prefix for the m/n csv files
        cmap (str or colourmap): The colourmap to use for the plot
        cbar_loc (str): where you want the colourbar. Options are none, left, right, top and botton. The colourbar will be of the elevation.
                        If you want only a hillshade set to none and the cmap to "gray"
        size_format (str): Either geomorphology or big. Anything else gets you a 4.9 inch wide figure (standard ESURF size)
        fig_format (str): An image format. png, pdf, eps, svg all valid
        dpi (int): The dots per inch of the figure
    Returns:
        Shaded relief plot. The elevation is also included in the plot.
    Author: FJC, SMM
    """
----

You can see that these functions take the directory of the data files, a `Base_file` which is the name of the base raster, and a bunch of other options that allow you to modify the figure. *LSDMapWrappers* assumes that different map layers have specific names (it sacrifices flexibility for ease) so if your base raster is called `WA.bil` then it expects the hillshade to be called `WA_HS.bil` and the basin raster to be called `WA_AllBasins.bil1`, for example.




