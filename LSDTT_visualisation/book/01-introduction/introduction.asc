
image::images/LSD-logo.png[width=200]
link:index.html[Return to main *LSDTopoTools* landing page]


== Introduction to LSDTopoTools visualisation

*LSDTopoTools* ingests data, digests it, and then produces gleaming, steaming new datasets. The number crunching that goes on inside of *LSDTopoTools* programs is there to help you understand your study area. But *LSDTopoTools* does not provide a graphical user interface: it just spits out numbers. Frequently these numbers are in binary format. To look at the data you need to _visualise_ it. 

There are two common ways to visualise data produced by *LSDTopoTools*. 

* Use a Geographic Information System (GIS). QGIS or ArcMap will do. The main difference betwen these packages is that one is free and open source (QGIS) and one is very very very expensive.  *LSDTopoTools* output is designed to be compatible with both of these GIS packages.
* Use our python plotting packages, including *LSDMappingTools*. These live in https://github.com/LSDtopotools/LSDMappingTools[their own github repository].

=== Should I use a GIS or python?

If you are just starting out with *LSDTopoTools*, you probably want to use a nice, friendly GIS that has shiny buttons and icons and lets you pan and zoom and do all those nice things. 

If you want to inspect individal data points you really need to use a GIS. 

However, there are some disadvantages to using a GIS, which is why we wrote https://github.com/LSDtopotools/LSDMappingTools[*LSDMappingTools*]. 

* You have to click a bunch of buttons to get a certain formatting, and if you are loading diffent datasets there are more buttons to click. When you do thousands of analyses clicking these buttons begins to get very, very tedious so eventually you write scripts to automate the process. *LSDMappingTools* automates plotting of *LSDTopoTools* output so you don't have to click so many buttons. 
* You want to reproduce a plot. Because a GIS involves lots of presing of buttons and clicking of mice, it is difficult to reproduce the exact same figure twice. But our philosophy is that science should be reproducible. So we have written scripts to guarantee that two users with the same data can produce *exactly* the same plot. 
* You want a plot that is formatted for a publication. Have you ever submitted a manuscript with figures that you have spent hours perfecting in Inkscape or Illustrator and then reviewers ask you to change the figure or add some data? Isn't that annoying? What if you wrote scripts where all the sizing, fonts, colouring, etc was exactly the way you want it so if the data changes you can just run a script again and you get a perfect figure without having to click buttons in Inkscape? We thought that would be great so we did it ourselves. 

We now use *LSDMappingTools* regularly to make our figures. For some analyses, our plotting routines have been streamlined to the extent that you can get publication-ready figures in one python call. Sounds great, doesn't it?

Well, there are some serious drawbacks to using python and https://github.com/LSDtopotools/LSDMappingTools[*LSDMappingTools*]:

* The scripts require loads of interdependant python packages. It means that not only is installation a pain but it also takes up a lot of space (you need to download about a GB of python packages to get everything working). We have, however, spent a lot of time experimenting with different installation techniques so we are optimistic we can get python working on your system. 
* If things go wrong it helps a lot to be good at Matplotlib. This has a steep learning curve. 
* I am afraid our python repositories are a mess. Every now and then we try to clean these up but the documentation and organisation leave a lot to be desired. We are sorry about this. 

If you think you are going to be using *LSDTopoTools* frequently in your research or work we would recommend taking the time to get the python tools working. If you just need a single result for a simple problem (i.e., you just want drainge area or a channel network) then look at *LSDTopoTools* output in a GIS. 