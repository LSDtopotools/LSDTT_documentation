

== Installing the LSDTopoTools python toolchain

So you have tried looking at *LSDTopoTools* output and are prepared to try our fancy python scripts. I am afraid before you can use these you are going to have to install our python toolchain. 

The most painless way to do this is with http://conda.pydata.org/miniconda.html[miniconda] and our environment files. 

WARNING: Even if the python installation works flawlessly and installs first time, it will still take some time and suck up quite a lot of space on your hard drive.

=== Where do I install the *LSDTopoTools* python toolchain

If you are working in native linux then you don't have to worry about this. But if you are using either a Docker or Vagrant setup, you will: do you install on your host operating system or on the Linux system that lives as a container or virtual machine?

We have installed the toolchain on our host operating system. There are three main reasons we did this:

* The container/virtual machine systems have no windowing so you can't use spyder. We like to use spyder so we wanted a windowing system. 
* I (SMM) tried to install the toolchain once on our vagrant machine and it killed GDAL. I don't understand why this happened but GDAL is absolutely essential to LSDTopoTools data preparation so I had to destroy my vagrant box and start again from scratch. So I've only got this working on my Windows system (but others have got it working on Linux and MacOS).
* Chances are you might want to use python for something other than LSDTopoTools and it is convenient to have python installed on your host machine. 

If you really want to install the toolchain in your vagrant/docker box go ahead but it will be difficult for us to debug since we have not done this ourselves. 


=== Setting up Python the easy way

This is a quick guide. There are many options for setting up python but this is our preferred setup. 

. Download and install http://conda.pydata.org/miniconda.html[miniconda] on your host machine. 
. Open a command prompt (use the start menu to search for *cmd.exe*)
. Get our  https://github.com/LSDtopotools/LSDMappingTools/tree/master/conda_environments[environment file]. There are three of them:
.. `environment.yml` is for Windows.
.. `environment_linux32.yml` is for a 32 bit Linux system.
.. `environment_linux64.yml` is for a 64 bit Linux system.
.. If you are on MacOS you shold try the `environment_linx64.yml` file. 
. Download the appropriate file onto your computer.
. Create the environment from that file with:
+
[source,console]
----
> conda env create -f environment.yml
----
+
I'm afraid this will take a little while. 
. Activate the environment:
+
[source,console]
----
> activate LSDTT
----

NOTE: This environment does not include *spyder*, you can install it with `conda install -n LSDTT spyder`

=== Setting up python the hard way (without the `environment.yml` file)

.If the environment file doesn't work
***********************
If the `environment.yml` file doesn't work, you can set up an environment this way. 
***********************

NOTE: This is an alternative to the previous section!

. The best way to install python is http://conda.pydata.org/miniconda.html[miniconda]. Currently everything we use is tested on **Python 2.7**, so use the Python 2.7 installer. However, we have attempted to maintain compatibility to python 3.x. If you use that, it should be okay, but please report any bugs on the github page.  
+
WARNING: Our visualisation routines involve some computation, and dealing with geospatial data. This means that there are a number of packages to install. This might take some time. If you are already using python for something critical you may consider setting up a https://realpython.com/blog/python/python-virtual-environments-a-primer/[virtual] http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/[environment] to ensure all of these new packages don't break what you've already got. 
+
. Once you have installed  http://conda.pydata.org/miniconda.html[miniconda], you can go into a command prompt (windows) or terminal (MacOS and Linux) and get the other stuff you need. To get the command prompt in windows look for the *cmd.exe* program.
+
. You should create a python environment for *LSDTopoTools*. Read about https://conda.io/docs/user-guide/tasks/manage-environments.html[conda python environments here]:
+
[source,console]
----
> conda create --name LSDTT
> conda activate LSDTT
----
+
After doing this you should see the name of the enviroment on your termial or cammand window prompt:
+
[source,console]
----
(LSDTT) > 
----
+
. Now we start by adding a bunch of standard packages:
+
[source,console]
----
> conda config --add channels conda-forge
> conda install numpy scipy matplotlib pandas 
----
+
. Now install the geographic tools
+
[source,console]
----
> conda install gdal shapely fiona rasterio pyproj basemap
----
+
. Finally add descartes. Note that on windows, MacOS and 64 bit Linux you can just add `descartes` to the line above. The reason we need this extra line for 32 bit linux is because there isn't a specific 32bit version of descartes. 
+
[source, console]
----
> conda install -c conda-forge descartes
----
+
. Every time you use our tools, you should activate the *LSDTT* python environment. 
+
. To run spyder you just type `spyder` at the command line. 
+
WARNING: Spyder needs an older version of a package called *PyQt*. If spyder doesn't start correctly, run `conda install pyqt=4.10 -f`  
+
NOTE: It is entirely possible that we have forgotten some package, but if you run one of our scripts and it tells you the package is not found, just use `conda` to install.

=== Using Spyder

Once you have installed python, you can use it from the command line (i.e. from a powershell or terminal window). However, you might prefer using a nice development environment that checks your code and has pretty colours and reassuring windows. When we are not using text editors (see our section <<Text editors for modifying files>>) we tend to use Spyder, which has an editor that can give you help with python packages and highlight your mistakes. You should have already installed it with `conda install spyder`, so to get it running go into a powershell or terminal window and just type:

[source,console]
----
> spyder
----

IMPORTANT: You cannot run spyder on the vagrant machine since it has no windowing system. If you want to run *Spyder* you need to use your host operating system. This is the one of the reasons we encourage you to do your python installation on your host operating system and not the vagrant machine. 

=== Fixing python gdal in windows

If you are using windows, there is a stupid bug in the *conda* gdal package where it cannot find the gdal data. To fix this:

. Search for the file *gcs.csv*. Note the folder in which it is located. On my system it is in `C:\Miniconda2\Library\share\gdal`
. Go into the control panel, go to system (or system and security, then system), click on *advanced system settings* and in system variables enter a new variable: *GDAL_DATA*. For the value of this enter the directory where the gdal data is that you found above.  

