

== Installing the LSDTopoTools python toolchain

So you have tried looking at *LSDTopoTools* output and are prepared to try our fancy python scripts. I am afraid before you can use these you are going to have to install our python toolchain. 

There are two options for this:
* *Easy way* Get our https://hub.docker.com/r/lsdtopotools/lsdtt_viz_docker[docker visualisation container]
* *Hard way* install the conda environment using http://conda.pydata.org/miniconda.html[miniconda]


=== Easy way: The LSDTT docker visualisation container

. You need to have LSDTT_installation.html#_installing_docker[Docker installed]. 
. Pull and run the docker visualisation container:
+
[source,console]
----
$ docker run -it -v C:\LSDTopoTools:/LSDTopoTools lsdtopotools/lsdtt_viz_docker
----
+ 
. Run a little script:
+
[source,console]
----
# Start_LSDTT.sh
----
+ 
. You need to navigate into the LSDMappingTools directory:
+
[source,console]
----
# cd /LSDTopoTools/LSDMappingTools
----
+ 
. You are ready to go!

=== Hard way (native linux) using miniconda and an environment

This is a quick guide. There are many options for setting up python but this is our preferred setup. 

. Download and install http://conda.pydata.org/miniconda.html[miniconda] on your host machine. You want the python 3 version for your operating system. 
. Open a command prompt (Windows) or terminal (Mac-OS or Linux)
. Get our  https://github.com/LSDtopotools/LSDMappingTools/tree/master/conda_environments[environment file]. There are two you might use:
.. `python3_environment.yml` is for Linux but is possibly more portable. 
.. `LSDMT_version_0.2.2.txt` is a functioning version that works in a 64 bit Linux environment
.. If you are in Windows, try the `python3_environment.yml`. Otherwise, try the other one. 
. Download the appropriate file onto your computer.
. Create the environment from that file with:
+
.. If you are using `LSDMT_version_0.2.2.txt`:
+
[source,console]
----
$ conda create --name LSDMT --file LSDMT_version_0.2.1.txt
----
+
.. If you are using `python3_environment.yml`
+
[source,console]
----
$ conda env create -f python3_environment.yml
----
+
I'm afraid this will take a little while. 
. Activate the environment:
+
[source,console]
----
> activate LSDTT
----
+
. You also need to clone the LSDMappingTools repository. Make a directory for it an use:
+
[source,console]
----
$ git clone https://github.com/LSDtopotools/LSDMappingTools.git
----

=== Super hard way: setting up python without an environment file

.If the environment file doesn't work
***********************
If the environment file doesn't work, you can set up an environment this way. 

WARNING: The python community is very active and packages get updated a lot. One of the packages we use is GDAL, which causes *A LOT* of conflicts. This means building an environment often fails if you just go with the default versions of packages. If you use the docker container or the environment files (instructions above), the python installation is guaranteed to work. We highly recommend installing the environment using those two methods unless you are a python expert. 
***********************

IMPORTANT: This is an alternative to the previous two sections! You don't need to do this if you have either got the docker container or if you have used the environment file. 

. The best way to install python is http://conda.pydata.org/miniconda.html[miniconda]. Use the python 3 version.
+
. Once you have installed  http://conda.pydata.org/miniconda.html[miniconda], you can go into a command prompt (windows) or terminal (MacOS and Linux) and get the other stuff you need. To get the command prompt in windows look for the *cmd.exe* program.
+
. You should create a python environment for *LSDTopoTools*. This will keep the *LSDMappingTools* dependencies separate from your other python installations so we don't break your other python stuff. Read about https://conda.io/docs/user-guide/tasks/manage-environments.html[conda python environments here]:
+
[source,console]
----
> conda create --name LSDTT
> conda activate LSDTT
----
+
After doing this you should see the name of the environment on your termial or command prompt:
+
[source,console]
----
(LSDTT) > 
----
+
. Now we start by updating conda and adding a bunch of standard packages. There are specific versions in the following instructions because some of the packages are in conflict and we have got to a functioning version through a lot of painful experimentation so you don't have to. Note that these instructions might go out of date but a functioning version can be scraped from https://hub.docker.com/r/lsdtopotools/lsdtt_viz_docker/dockerfile[our dockerfile]
+
[source,console]
----
> conda install -y -c conda-forge conda=4.6.14
> conda config --add channels conda-forge
> conda config --set channel_priority strict
> conda install -y git python=3.6.7
> conda install numpy scipy matplotlib pandas 
----
+
. Now install the geographic tools
+
[source,console]
----
> conda install -y gdal geopandas shapely fiona rasterio pyproj cartopy descartes utm
----
+
. In Linux/MacOS, you should also be able to install `ffmpeg`, which we use to animate things. 
+
[source, console]
----
> conda install -y ffmpeg
----
+
. Every time you use our tools, you should activate the *LSDTT* python environment. 



=== Fixing python gdal in windows

If you are using windows, there is a stupid bug in the *conda* gdal package where it cannot find the gdal data (this was updated in 2018 so it might be fixed by now). To fix this:

. Search for the file *gcs.csv*. Note the folder in which it is located. On my system it is in `C:\Miniconda2\Library\share\gdal`
. Go into the control panel, go to system (or system and security, then system), click on *advanced system settings* and in system variables enter a new variable: *GDAL_DATA*. For the value of this enter the directory where the gdal data is that you found above.  

