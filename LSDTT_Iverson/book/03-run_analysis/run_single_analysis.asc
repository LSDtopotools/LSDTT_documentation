:numbered:


== Preprocessing the precipitation data

The most sensible parameter inputted in the model is the precipitation data. This can be from in-situ measurements, global dataset or simulations. The data needs to be in a `csv` (Comma-separated-values) files containing the following columns:

[source,csv]
----
duration_s,intensity_mm_sec
...,...
----

Where `duration_s` represent a duration in seconds and `intensity_mm_sec` is the corresponding precipitation intensity in mm per seconds. This last usually requires conversion from common dataset. For example, `15 mm` of rain in 3 hours becomes `15/10800=0.001389 mm/seconds`.

== Run the model for a single soil column

The following instructions describe how to run the code and visualise the outputs for a single soil column simulated.

=== Simulation

Once compiled, the {Cpp} executable can be run from the command-line and need to be directed to a parameter file (a text file containing a series of values telling the {Cpp} model how to simulate the soil command). The parameter files can be written as follow in a text file:

[source, parameter file]
----
# This is a parameter file for the Iverson model
# Lines beginning with # are comments and are not read by the softwares

# The read path represent the path where the data will be read
read path: /path/to/file/
# The write path represent the path where the data will be written (Can be the same than the read path)
write path: /path/to/file/
# Write fname is the prefix of the written files
write fname: 20150711_20160809_filtered

# Name of the csv file containing the preprocessed precipitation data
rainfall_csv: preprocessed_data.csv

# Parameters for the models
D_0: 0.000005
K_sat: 0.00000005
d: 2
Iz_over_K_steady: 0.2
alpha: 0.51
friction_angle: 0.38
cohesion: 12000
weight_of_soil: 19000
weight_of_water: 9800
depth_spacing: 0.1
n_depths: 35


#end of file
----

The executable needs to know the path and the name of the parameter file to read them correctly. From a terminal in the folder containing the compiled executable, the following command will run the model:

[source,console]
----
./iverson_model.exe /path/to/the/parameter/file/ name_of_the_parameter_file.param
----

Note that the parameter file is a text file and can be saved with any extensions (e.g., `.param`, `.driver`). The following parameters can be provided to the model.

|=======
|_Parameter_ |_Description_
|rainfall_csv | the name of the preprocessed `csv` file with the rainfall time series.
|D_0 | Hydraulic diffusivity
|K_sat | Hydraulic conductivity
|d |Depth of wate table
|Iz_over_K_steady |Steady-state infiltration rate
|alpha |Topographic slope
|friction_angle |Critical friction angle for the soil
|cohesion |Soil cohesion
|weight_of_soil |Volumic weight of the soil
|weight_of_water |Columic weight of the water
|depth_spacing |Model resolution
|n_depths |Number of discretisation
|=======


=== Model outputs

The {Cpp} model outputs 6 `csv` files containing the evolution of various characteristics of the soil column. Four csv files contain the time series of the different components of the Factor of Safety (FS) functions of time and depth. The independent components of FS are described in equations 28 (a,b and c) and their time series are in files `XXX_time_series_depth_Fcomp.csv` , where `XXX` is the `write fname` in the parameter file and `Fcomp` the corresponding component. It also output the final FS as well as the evolution of the transient pore pressure (Psi) in the file `time_series_depth_Psi.csv`. All of these files have the same structure:

* The first column is Depth

* All the following columns are the corresponding values for each simulated time, where the first row is time.

+

=== Spatial analysis

Each model run therefore allow the tracing of time at risk for a single soil column through time. Once a time has been identify, a raster can be inputed to the model to generate a risk map. The raster, assumed to be represented by the simulations, will be downsampled, the slope will be calculated and factor of safety is calculated for each soil column. The following lines can be added to the parameter file to enable the spatial analysis:

[source, parameter file]
----
full_1D_output: false
spatial_analysis: true
reload_alpha: false
resample_slope: true
resample_slope_res: 6
topo_raster: insar_area_PP
# alpha_to_reload:
polyfit_window_radius: 1
n_threads: 4
time_of_spatial_analysis: 19818000
----

Where `full_1D_output: false` disables other ouputs, `spatial_analysis: true` enables the analysis, `reload_alpha: false` enable/disable the reloading of previously calculated slope map, `resample_slope` determines if the raster is down-sampled before slope calculation (for speed purposes) with a new resolution detailed with `resample_slope_res`, `topo_raster` is the name of the raster witout its extension (it has to be an ENVI bil file), `polyfit_window_radius` is the precision of slope calculation, `n_threads` is the number of threads to use for multithreading and `time_of_spatial_analysis` is the identify time on the precipitation time series. It produces a raster with the factor of safety for each soil column.


