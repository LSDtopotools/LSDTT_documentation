[appendix]
== Extremely rapid startup with no explanation whatsoever

This appendix is an explanation-free version of this chapter, for people who just want to see if the tools work before going into the details. 
We even go through the installation instructions for you here. 

=== For University of Edinburgh Students

We assume you are on a university computer. If not, go to the docker instructions. 

. In the windows search bar, look for *MobaXterm personal edition*.
. When you open this, click on the button that says *start local terminal*.
. In the terminal window, type `ssh UUN@ssh.geos.ed.ac.uk` and enter your password. UUN is your university user name. 
. This puts you into the university ssh server, which is slow. Move into a better one by typing `ssh burn`. 
. Go into your T: drive by entering: `cd /exports/csce/datastore/geos/users/UUN`
. Now enter: `git clone https://github.com/LSDtopotools/LSDTopoTools2.git`
. Now enter: `cd LSDTopoTools2/src/`
. Now enter: `sh build.sh`
. You will need to wait a bit for this step. 
. Now enter: `cd ..`
. Finally enter: `sh lsdtt2_terminal.sh`
. Now go into the parent directory:  `cd ..`
. Grab the test data: `git clone https://github.com/LSDtopotools/LSDTT_workshop_data.git`
. Go into this directory: `cd LSDTT_workshop_data`
. Run the following commands:
.. `lsdtt-basic-metrics WA_BasicMetrics01.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics02.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics03.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics04.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics05.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics06.driver`
. This will generate a bunch of rasters and some `csv` and `json` files. 
. Nice work, you are finished!

=== For docker users

You need to have docker installed for this: we won't walk you through docker installation here. Also you will need `git`. See installation notes. 

. Make an *LSDTopoTools* directory on your computer.
. Go into that directory and `git clone` two things. In Windows you need to be in a `git bash` window:
.. git clone https://github.com/LSDtopotools/LSDTopoTools2.git 
.. git clone https://github.com/LSDtopotools/LSDTT_workshop_data.git
. Make a directory for a dockerfile (we will download this). For example in `C:\docker`.
. Inside that make another directory to hold the *LSDTopoTools* dockerfile. For example called `lsdtt_alpine`. 
. In the `lsdtopotools2` directory there will be a directory `/LSDTopoTools2/docker_files/lsdtt_alpine`. In there you will find a dockerfile. Copy it into the directory that you just made to store dockerfiles (e.g., `C:\docker\lsdtt_alpine`).
. Using a shell or terminal that has docker enabled, go into that directory and build the docker container:
.. `docker build -t lsdtt-alpine .`
.. Note: this container will be around 250 Mb. 
. You then need to run the container with the directory into which you cloned all that stuff mapped to the container. Docker does this with the `-v` flag. The first directory after the `-v` flag is the directory on the host operating system, and then a `:` symbol, and then the directory on the container. You need to use linux directaory separators (`/`). So, for example:
.. `docker run -it -v C:/LSDTopoTools/:/LSDTopoTools lsdtt-alpine`
. Once you do that, you will be in a linux environment. Change the directory, then build the source code:
.. `cd /LSDTopoTools/LSDTopoTools2/src`
.. `sh build.sh`
. Now add the path of the lsdtopotools files:
.. `PATH=$PATH:/LSDTopoTools/LSDTopoTools2/bin`
. Now go into the directory with the test data:
.. cd `/LSDTopoTools/LSDTT_workshop_data`
. Run the following commands:
.. `lsdtt-basic-metrics WA_BasicMetrics01.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics02.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics03.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics04.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics05.driver`
.. `lsdtt-basic-metrics WA_BasicMetrics06.driver`
. This will generate a bunch of rasters and some `csv` and `json` files. 
. Nice work, you are finished!