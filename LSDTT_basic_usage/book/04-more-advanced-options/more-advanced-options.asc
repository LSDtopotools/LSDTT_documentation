== More advanced options in lsdtt-basic-metrics

One of the most common operations when analysing topographic data is extracting channel networks. We have an entire link:LSDTT_channel_extraction.html[package for that], which has a number of different https://zenodo.org/record/824198#.WfseyFu0OUk[channel extraction algorithms].

However, many users just want channels extracted with the minimum of fuss and so we provide a simple channel profile extraction tool in *lsdtt-basic-metrics*.

=== What channels do you want? Selecting basins

Sometimes you don't want every channel in the landscape, but only particular channels. We have some basin selection tools for this.

The next driver file has some options for selecting basins (`WA_BasicMetrics04.driver`):

[source,paramfile]
----
# These are parameters for the file i/o
read fname: WA
write fname: WA_FourthExample
channel heads fname: NULL

# Basic channel network
threshold_contributing_pixels: 5000
print_junctions_to_csv: true

# Convert to json
convert_csv_to_geojson: true

# Getting the basins
find_basins: true
minimum_basin_size_pixels: 10000
maximum_basin_size_pixels: 100000000
only_take_largest_basin: false

# Print the basin raster
print_basin_raster: true
----

The key elements here are:

* `find_basins: true` This tells the program to find specific basins
* `minimum_basin_size_pixels: 10000` This tells the program to get basins at least this big. They must be smaller than `maximum_basin_size_pixels`.
* `only_take_largest_basin` When false it finds all basins in the size window, whereas if tru you only get the larges basin.
* `print_basin_raster: true` this prints a basin raster.

Run the driver and have a look at the new files.

If you load the basin raster in QGIS (it has the extension `AllBasins`)

.Basins extracted from the DEM
image::images/basins.jpg[Whiteadder basins]

You can try modifying some of the parameters like the minimum and maximum basin size and the flag `only_take_largest_basin` to see what you get.

==== Geojson data

If you use the switch `convert_csv_to_geojson: true` the csv files will be converted to http://geojson.org/[geojson] files which can be loaded directly as shapefiles in a GIS. Have a look at our link:LSDTT_QGIS.html[QGIS documents]; we have link:LSDTT_QGIS.html#_adding_vector_data[instructions for loading "vector" data]. Geojson files contain GIS-readable vector data.

=== Picking basins

. If you ran the previous driver you will get a geojson file that has `_JN.geojson` in the name. If you load this data in a GIS you will see something like this:
+
.Junctions in the DEM
image::images/junctions.jpg[Whiteadder junctions]
+
.If you use the identify features button or information butting in your GIS you can see what the junction numbers are:
+
.Junction information in the DEM
image::images/junction_information.jpg[Whiteadder junction information]
+
You can see in the table to the right the junction number is 12.
+
. If you want to pick certain junctions you can make a text file and just write the junction numbers you want in that text file.
+
. We have added a junctions file in the directory with the data called `selected_WA.junctions`. It has a few junctions picked. The line to add to the parameter file are:
+

[source,paramfile]
----
BaselevelJunctions_file: /LSDTopoTools/dataExampleTopoDatasets/selected_WA.junctions
----
+
IMPORTANT: This line needs the entire path to your file. So you will probably need to go into the file and change the filename to match your directory structure.

. Run the next parameter file (`WA_BasicMetrics05.driver`) and have a look at the basins generated. They will look something like this:
+
.Selected basins
image::images/selected_basins.jpg[Whiteadder selected basins]

=== An important note on basin selection.

In *LSDTopoTools* basins are selected on the basis of junctions. But junctions have two or more contributing channels! The basin selected by a junction *includes* the channel going downstream that stops one pixel before the next junction. In this way we can select basins that are representative of a given https://en.wikipedia.org/wiki/Strahler_number[Strahler order].


=== Getting a channel network with more information

. The next driver file is `WA_BasicMetrics06.driver` and it looks like this:
+
[source,paramfile]
----
# These are parameters for the file i/o
read fname: WA
write fname: WA_SixthExample
channel heads fname: NULL

# Basic channel network
threshold_contributing_pixels: 5000

# Convert to json
convert_csv_to_geojson: true

# Getting the basins
find_basins: true
maximum_basin_size_pixels: 100000000
only_take_largest_basin: true

# Print the basin raster
print_chi_data_maps: true
----
+
. The key element of this file is `print_chi_data_maps: true`. This prints a channel network that you can load into a GIS (the file has the extension `_chi_data_map`):
+
.The channel network produced from the chi data maps
image::images/chi_data_maps.jpg[Channel network from chi data maps]
+
. This looks a bit like the old channel network but the file contains much more information. If you open the csv file you will see the location of the points but also drainage area, elevation, flow distance, keys for identifying tributaries, and something called the chi coordinate, which you can read all about link:LSDTT_chi_analysis.html[in a different part of the documentation].
+
. You could, for example, make a chi-elevation plot using the data in the csv file:
+
.A chi-elevation plot for the basin
image::images/chi_elevation.jpg[Chi-elevation plot in the basin]
