== More advanced options in LSDTT_BasicMetrics

One of the most common operations when analysing topographic data is extracting channel networks. We have an entire link:LSDTT_channel_extraction.html[package for that], which has a number of different https://zenodo.org/record/824198#.WfseyFu0OUk[channel extraction algorithms]. 

However, my users just want channels extracted with the minimum of fuss and so we provide a simple channel profile extraction tool in *LSDTT_BasicMetrics*. 

=== Getting a channel network: the parameter file

We are going to follow essentially the same steps as before. For this analysis, the parameter file we will use is this one is included in the files in the example folder (it is called `WA_BasicMetrics04.driver`) and it looks like this:

[source,paramfile]
----
# These are parameters for the file i/o
# IMPORTANT: You MUST make the write directory: the code will not work if it doesn't exist. 
read path: /exports/csce/datastore/geos/users/smudd/analysis_for_papers/Test_basicmetrics/
write path: /exports/csce/datastore/geos/users/smudd/analysis_for_papers/Test_basicmetrics/
read fname: WA
write fname: WA_FourthExample
channel heads fname: NULL

# Basic channel network
threshold_contributing_pixels: 1000
print_channels_to_csv: true

find_basins: true
print_basin_raster: true
print_chi_data_maps: true
----

We are not going to worr


. [red]#Terminal 1# In the first terminal window type the following:
.. For docker/vagrant
+
[source,console]
----
$ ./LSDTT_BasicMetrics.out /LSDTopoTools/Topographic_projects/LSDTT_workshop_data/ WA_BasicMetrics04.driver
----
+
.. For native Linux/Edinburgh servers
+
[source,console]
----
$ ./LSDTT_BasicMetrics.out ~/LSDTopoTools/Topographic_projects/LSDTT_workshop_data/ WA_BasicMetrics04.driver
----
+
