:numbered:


== Plotting
Running the code will produce many ouput files. This section details the automated plotting routines we provided and used for the paper. For a more advance use, I'll write a description of each output files and how to play with it using Python, Matplotlib,  Pandas and an homemade OO code.

=== The philosophy

We provide automated and open-source plotting option using Python code and pakages. Many plotting option are automated thanks to the formatted outputs from the `c++` code and does not require coding to be used. Pltting routines are accessible via command line and propose a range of customization. For advanced plotting, we recommend to code directly in Python as Matplotlib package produce amazing publication-ready figures.

=== How to plot

.Quick guide if you already know what you are doing
*****************************************************************************

Here is a quick overview of how to run the plotting routines:

. In a terminal, you need first to navigate to the LSDMappingTools folder, depending on your OS, you need to use the equivalent of `cd`. example on linux: `cd /home/boris/Desktop/LSDMappingTools/`, or on Windows: `cd C:\windows\something\LSDMappingTools\`

. All the plotting routine have a common start: you need to call the python script and flag the *path* and *common prefix* of all the files as follow: `python PlotKnickpointAnalysis -dir /home/boris/Desktop/GIS/massif_central/ -fname massif_central_DEM`

. The second step is optional: you can select specific river to plot: `-basin_keys 1,5` will only select the basin 1 and 5; `-source_keys 54,0,12,18` will only select rivers 54,0,12 and 18 and finally `-min_sl 10000` will only select rivers with a flowing length > 10000 metres. These options are combined and can overlap, if you select a river key that is not in the basin key, it won't be included. Default option (if you don't use the flag) means all selected.
. `-rasplot True` will plot three maps: a topographic map, a knickpoint map with the river network drapped on the shaded elevation and a knickpoint map with the river network on black background.
. `-rivplot True` will plot two river profile per river selected (*It can take a lot of time and produce many files if you don't sort your rivers*) in $\chi&-elevation and long profile representation. This can be customized with `-segelev True` to plot the segmented elevation of the river to assess if the segment-fitting paramters (e.g. `target_nodes`) are suitting user's precision requirements.
. `-basplot True` will plot two plots per basin selected, in $\chi&-elevation and long profile representation.
. `-statplot True` will plot histogram distributions of stepped knickpoints and $\Delta k_{sn}$. It provides a first order statistical description to sort knickpoints. It can be customized with `-nbh 80` to force a number of bins.
. `-ksnPs True` is a calibrating plotting option that plots a $\chi - k_{sn}$ profile with raw and denoised $k_{sn}$ in order to check $\lambda$ effect.
. `-cov 3,5,2` is a parameter that apply a basic cut off value on the knickpoints, in order to select the main ones. In this example it will select knickpoint with  $\Delta k_{sn}<-3$, $\Delta k_{sn}>5$ and $\Deltaz_{seg}>2$.

. Finally `-all true` will plot all the option above. `-allD True` add some debugging plot such as ksn profiles.

*****************************************************************************
