:numbered:


// Find an image for later
//image::images/Le_Sueur_terraces.png[, 1000, 600, align='center']

.Before you start
*********************************************
Before you start you need to install *LSDTopoTools*. If you haven't done that, please follow the link:LSDTT_installation.html[instructions on how to install LSDTopoTools]


In addition, you will need to use some basic linux shell commands. If you have never done this before I suggest reading this brief introduction: link:LSDTT_using_linux.html[basic use of the linux shell].
*********************************************

Knickpoints and knickzones in river channels are areas of local steepening that can be caused by a number of factors such as lithologic differences or via transmission of changing erosion rates. A number of theories of channel incision suggest that if uplift rates changes, signals may propagate upstream through channel networks in the form of knickpoints and so locating knickpoints in river channels is often connected to interpreting the history of tectonic activity in an area through time. 

Initial efforts to locate knickpoints and knickzones typically involved looking for waterfalls (a vertical knickpoint) or using channel long profiles. Later attempts integrated slope--area data because normalising for drainage area is essential if one is to compare headwaters with larger channels downstream. 

Many authors report knickpoint locations but the methods used to identify them are frequently only semi-quantitatve (in that user input is required) and very difficult to reproduce. We have implemented a knickpoint detection algorithm that aims to minimise user inputs. It is reproducible in that if the parameters of the method are reported and the same topographic data is used any author can reproduce the same map of knickpoint locations. 

== The methodology

The method has several steps, which will be outlined below. To summarise these steps here is a quick summary:

. The method extracts channel steepness, stem:[k_{sn}], using a statistical segmentation method of channel profiles based on https://agupubs.onlinelibrary.wiley.com/doi/full/10.1002/2013JF002981[Mudd et al., 2014 JGR].
. These segments of stem:[k_{sn}] are derived using a Monte Carlo approach so there is noise at segment boundaries: the derived segments represent many iteration of the segmentation algorithm. To constrain the exact locations of the transitions a Total Variation Denoising (TVD) method from https://ieeexplore.ieee.org/abstract/document/6579659/[Condat (2013)] is used to isolate the main stem:[k_{sn}] variations.
. We then use various algorithms for grouping and quantification of stem:[k_{sn}] variations. You can read the detail in our paper.
. Finally we implement analysis of the segmented elevation to isolate the knickpoints and knickzones using a variety of threhsolding and windowing methods.

We do not describe these methods in detail in this documentation: that information can be found in our upcoming ESURF paper. These instructions are intended to simply get you using the software and extracting knickpoints and knickzones using your favourite topographic data. 


.Quick guide if you already know what you are doing
*****************************************************************************

Here is a quick overview of how to set up and run the code, if you have done it before:

. Choose the channel extraction method that you would like to use.
. Make sure your DEM is in `bil` format and is in the repository folder
. Create a parameter file for your DEM
. Make sure you have created a channel network for your DEM, and have the `csv` file in your repository, except if you want to use the generic drainage are threshold.
. Compile the code, `make -f chi_mapping_tool.make`. This step is only required once after any updates or fresh install.
. Create a parameter file `something.param` with the requested parameters.
. run the analysis: `./chi_mapping_tool.exe /path/to/the/param/ something.param`
. Open the resulting `bil` files in the GIS of your choice.
*****************************************************************************

== Get the code

The knickpoint analysis tools lie within the *chi mapping tool*, so you can refer to the link:LSDTT_chi_analysis.html#_installing_the_code_and_setting_up_directories[installation instructions of that tool]. 

Once you have compiled that tool (you can do that with either `LSDTopoToolsSetup.py` or by using `make -f chi_mapping_tool.make` you will then have the chi mapping tool program. 

You use this program by calling a parameter file. These parameter files are explained in link:LSDTT_chi_analysis.html#_the_parameter_file[excruciating detail] in other components of the *LSDTopoTools* documentation. These are instructions for the sorts of analyses you want done to your topographic data. They consist of keywords, which must be spelled correctly and are case sensitive, followed by a colon (`:`). The next section explains the keywords you need in your parameter file to run the knickpoint analysis. 
