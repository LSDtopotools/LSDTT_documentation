:numbered:
=== Coupled hillslope and channel ananylsis: options and outfiles


==== Input options

Like all *LSDTopoTools* programs, you can set parameters in the *Spahgetti tool* that drive the analysis. Many of these are shared with other programs in the *LSDTopoTools* analysis suite. 

Some of the parameters specific to the coupled hillslope-channel analysis are: 

===== Parameters for...

[cols="1,1,2", options="header"]
.File input and output options. 
|===
|Keyword
|Input type
|Description

|ChannelSegments_file
|string
|The name of the channel segments raster. Made with the *chi analysis tool* with the parameters `print_segments: true` and `print_segments_raster: true` set. 

|Floodplain_file
|string
|The name of a floodplain raster. If this is given, the hillslopes stop as soon as they reach a floodplain. 


|===

===== Parameters for other stuff

[cols="1,1,2", options="header"]
.File input and output options. **These do not have defaults and MUST be declared**.
|===
|Keyword
|Input type
|Description

|ChannelSegments_file
|string
|The name of the channel segments raster. Made with the *chi analysis tool* with the parameters `print_segments: true` and `print_segments_raster: true` set. 

|Floodplain_file
|string
|The name of a floodplain raster. If this is given, the hillslopes stop as soon as they reach a floodplain. 


|===


==== Parameters shared by other analyses packages in LSDTopoTools

===== Basic file input and output

[cols="1,1,2", options="header"]
.File input and output options. **These do not have defaults and MUST be declared**.
|===
|Keyword
|Input type
|Description

|write path
|string
|The path to which data is written. **The code will NOT create a path: you need to make the write path before you start running the program.**

|read path
|string
|The path from which data is read.

|write fname
|string
|The prefix of rasters to be written *without extension*.
For example if this is `Test` and you have selected `bil` format then a fill operation will result in a file called `Test_Fill.bil`.

|read fname
|string
|The filename of the raster to be read without extension. For example if the raster is `MyRaster.bil`, read fname will be `MyRaster`.


|channel heads fname
|string
|The filename of a channel heads file. You can import channel heads. If this is set to `NULL` then the channels will be calculated using a pixel threshold. 

|===


==== Selecting channels and basins

[cols="1,1,1,3", options="header"]
.Options for determining which channels and basins to analyse, including settings for the fill function.
|===
|Keyword
|Input type
|Default value
|Description

|CHeads_file
|string
|NULL
|This reads a channel heads file. It will supercede the `threshold_contributing_pixels` flag. That is, if you give a valid CHeads filename the code will ignore the threshold pixels and use the sources in the file instead. You can calculate channel heads using our https://github.com/LSDtopotools/LSDTopoTools_ChannelExtraction[channel extraction tools]. The file needs to be a *csv* file and you pass the filename *WITHOUT EXTENSION*. The format of the filename is one with 5 columns: `node_index,row,col,x,y`. The `x,y` coordinates are in local UTM coordinates.  

|threshold_contributing_pixels
|int
|1000
|The number of pixels required to generate a channel (i.e., the source threshold).

|minimum_basin_size_pixels
|int
|5000
|The minimum number of pixels in a basin for it to be retained. This operation works on the baselevel basins: subbasins within a large basin are retained. 

|maximum_basin_size_pixels
|int
|500000
|The maximum number of pixels in a basin for it to be retained. This is only used by `find_complete_basins_in_window` but that algorithm for selecting basins is the default. 

|find_complete_basins_in_window
|bool (true or 1 will work)
|true
|**THIS IS THE DEFAULT METHOD! If you don't want this method you need to set it to false.** If this is true, it i) Gets all the basins in a DEM and takes those between the `minimum_basin_size_pixels` and `maximum_basin_size_pixels`. It then removes basins that are influenced by the edge of the DEM, and then removes nested basins. The reason for removing basins draining the edge is that all chi and S-A analysis requires that the basin is complete. If not, your area, and therefore chi coordinate, will be incorrect. 

|find_largest_complete_basins
|bool (true or 1 will work)
|false
|A boolean that, if set to true, will got through each baselevel node on the edge of the DEM and work upstream to keep the largest basin that is not influenced on its edge by nodata. **This only operates if `find_complete_basins_in_window` is set to false!** 

|test_drainage_boundaries
|bool (true or 1 will work)
|true
|A boolean that, if set to true, will eliminate basins with pixels drainage from the edge. This is to get rid of basins that may be truncated by the edge of the DEM (and thus will have incorrect chi values). **This only operates if BOTH `find_complete_basins_in_window` and `find_largest_complete_basins` are set to false!, OR if you are using a baselevel junctions file.** 

|only_take_largest_basin
|bool (true or 1 will work) 
|false
|If this is true, a chi map is created based only upon the largest basin in the raster. 

|print_basin_raster
|bool
|false
|If true, prints a raster with the basins. *IMPORTANT!* This should be set to true if you want to use any of our https://github.com/LSDtopotools/LSDMappingTools[python plotting functions] that use basin information. Note that if this is true it will also print csv files with basin numbers and source numbers to assist plotting.  

|===


==== Output files

The two main output files are once called `_MChiSegmented.csv` and one called `_HilltopData.csv`. 

* `_MChiSegmented.csv`: This file is almost identical to the one produced using link:LSDTT_chi_analysis.html#_point_data_usually_output_as_csv[channel steepness tools], execpt it has a final column with a `segment_number` that is used to link hilltops to channels. 
* `_HilltopData.csv`: This contains data from hillslope traces. These tend to be *very large*.



