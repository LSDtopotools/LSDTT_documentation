:numbered:
=== Coupled hillslope and channel ananylsis: options and outfiles


==== Input options

Like all *LSDTopoTools* programs, you can set parameters in the *lsdtt-hillslope-channel-coupling* that drive the analysis. Many of these are shared with other programs in the *LSDTopoTools* analysis suite. 

===== Basic file input and output

[cols="1,1,2", options="header"]
.File input and output options. **These do not have defaults and MUST be declared**.
|===
|Keyword
|Input type
|Description

|*THIS IS NOT A KEYWORD*
|Null
|If you don't enter the write path, read path or write fname, the program will assume that the read and write paths are the current directory, and the write fname is the same as the read fname. 

|write path
|string
|The path to which data is written. **The code will NOT create a path: you need to make the write path before you start running the program.**

|read path
|string
|The path from which data is read.

|write fname
|string
|The prefix of rasters to be written *without extension*.
For example if this is `Test` and you have selected `bil` format then a fill operation will result in a file called `Test_Fill.bil`.

|read fname
|string
|The filename of the raster to be read without extension. For example if the raster is `MyRaster.bil`, read fname will be `MyRaster`.

|===

===== DEM preprocessing

[cols="1,1,1,2", options="header"]
.DEM preprocessing. These just help you clean data and perform very basic operations.
|===
|Keyword
|Input type
|Default value
|Description

|minimum_elevation
|float
|0
|If you have the `remove_seas` keyword set to true, the program will change any elevation node below this value to NoData.

|maximum_elevation
|float
|30000
|If you have the `remove_seas` keyword set to true, the program will change any elevation node above this value to NoData.

|remove_seas
|bool
|false
|If true, this changes extreme value in the elevation to NoData.

|min_slope_for_fill
|float
|0.001
|The minimum slope between pixels for use in the fill function. 

|raster_is_filled
|bool
|false
|If true, the code assumes the raster is already filled and doesn't perform the filling routine. This should save some time in computation, but make sure the raster really is filled or else you will get segmentation faults!

|only_check_parameters
|bool
|false
|If true, this checks parameter values but doesn't run any analyses. Mainly used to see if raster files exist. 

|===



===== Hilltop parameters

[cols="1,1,1,2", options="header"]
.These are used to select hilltops
|===
|Keyword
|Input type
|default
|Description

|StreamNetworkPadding
|int
|0
|The number of pixels you want to pad the channel network. If a hillslope trace comes within this many pixels of the channel, the trace stops. 

|min_stream_order_to_extract_basins
|int
|0
|Minimum stream order for extracting basins (or the hilltops of those basins)

|max_stream_order_to_extract_basins
|int
|100
|Maximum stream order for extracting basins (or the hilltops of those basins)

|RemovePositiveHilltops
|bool
|true
|Remove hilltops with positive curvature (i.e., that are concave)

|RemoveSteepHilltops
|bool
|true
|Remove hilltops that are steep. This is because steep (plunging) ridgetop will move into the nonlinear sediment transport regime and there will no longer be a linear relasionship between curvature and erosion rate at steady state. Basically if hilltops are too steep the assumptions of the analysis break down. 

|Threshold_Hilltop_Gradient
|float
|0.4
|If `RemoveSteepHilltops` is `true`, then any hillslopes steeper than this will be removed.

|MaskHilltopstoBasins
|bool
|true
|Need to ask Martin what this does. 

RemovePositiveHilltops

|===


===== Filenames for channel head, floodplains, and other pre-computed data

[cols="1,1,1,3", options="header"]
.Options for determining which channels and basins to analyse, including settings for the fill function. 
|===

|Keyword
|Input type
|Default value
|Description

|ChannelSegments_file
|string
|NULL
|A file that has computed the channel segment numbers so that these segments can be linked to ridgetops. It is calculated *UPDATE*

|Floodplain_file
|string
|NULL
|A file that has 1 for floodplain and 0 elsewhere. Used to mask the floodplains so that hillslopes stop there. The format is *UPDATE*

|CHeads_file
|string
|NULL
|This reads a channel heads file. It will supercede the `threshold_contributing_pixels` flag. That is, if you give a valid CHeads filename the code will ignore the threshold pixels and use the sources in the file instead. You can calculate channel heads using our https://github.com/LSDtopotools/LSDTopoTools_ChannelExtraction[channel extraction tools]. The file needs to be a *csv* file and you pass the filename *WITHOUT EXTENSION*. The format of the filename is one with 5 columns: `node_index,row,col,x,y`. The `x,y` coordinates are in local UTM coordinates.  

|BaselevelJunctions_file
|string
|NULL
|File containing a list of baselevel junctions to determine basins to analyse. The basin numbers should be on individual lines of the text file. You can see the junction numbers by printing the junction numbers to a csv with the command `print_junctions_to_csv`.

|===

===== Selecting channels and basins

There are a number of options for selecting channels and vasins. The basin selection is linked to extracting channel profile analysis and is not used for hillslop analysis. 

[cols="1,1,1,3", options="header"]
.Options for determining which channels and basins to analyse, including settings for the fill function. 
|===
|Keyword
|Input type
|Default value
|Description



|threshold_contributing_pixels
|int
|1000
|The number of pixels required to generate a channel (i.e., the source threshold).

|minimum_basin_size_pixels
|int
|5000
|The minimum number of pixels in a basin for it to be retained. This operation works on the baselevel basins: subbasins within a large basin are retained. 

|maximum_basin_size_pixels
|int
|500000
|The maximum number of pixels in a basin for it to be retained. This is only used by `find_complete_basins_in_window` but that algorithm for selecting basins is the default. 

|find_complete_basins_in_window
|bool (true or 1 will work)
|true
|**THIS IS THE DEFAULT METHOD! If you don't want this method you need to set it to false.** If this is true, it i) Gets all the basins in a DEM and takes those between the `minimum_basin_size_pixels` and `maximum_basin_size_pixels`. It then removes basins that are influenced by the edge of the DEM, and then removes nested basins. The reason for removing basins draining the edge is that all chi and S-A analysis requires that the basin is complete. If not, your area, and therefore chi coordinate, will be incorrect. 

|find_largest_complete_basins
|bool (true or 1 will work)
|false
|A boolean that, if set to true, will got through each baselevel node on the edge of the DEM and work upstream to keep the largest basin that is not influenced on its edge by nodata. **This only operates if `find_complete_basins_in_window` is set to false!** 

|test_drainage_boundaries
|bool (true or 1 will work)
|true
|A boolean that, if set to true, will eliminate basins with pixels drainage from the edge. This is to get rid of basins that may be truncated by the edge of the DEM (and thus will have incorrect chi values). **This only operates if BOTH `find_complete_basins_in_window` and `find_largest_complete_basins` are set to false!, OR if you are using a baselevel junctions file.** 

|only_take_largest_basin
|bool (true or 1 will work) 
|false
|If this is true, a chi map is created based only upon the largest basin in the raster. 

|print_basin_raster
|bool
|false
|If true, prints a raster with the basins. *IMPORTANT!* This should be set to true if you want to use any of our https://github.com/LSDtopotools/LSDMappingTools[python plotting functions] that use basin information. Note that if this is true it will also print csv files with basin numbers and source numbers to assist plotting.  

|===


===== Printing of various rasters

[cols="1,1,1,3", options="header"]
.Options for determining which channels and basins to analyse, including settings for the fill function. 
|===

|Keyword
|Input type
|Default value
|Description

|ChannelSegments_file
|string
|NULL
|A file that has computed the channel segment numbers so that these segments can be linked to ridgetops. It is calculated *UPDATE*

|Floodplain_file
|bool
|NULL
|A file that has 1 for floodplain and 0 elsewhere. Used to mask the floodplains so that hillslopes stop there. The format is *UPDATE*

|CHeads_file
|string
|NULL
|This reads a channel heads file. It will supercede the `threshold_contributing_pixels` flag. That is, if you give a valid CHeads filename the code will ignore the threshold pixels and use the sources in the file instead. You can calculate channel heads using our https://github.com/LSDtopotools/LSDTopoTools_ChannelExtraction[channel extraction tools]. The file needs to be a *csv* file and you pass the filename *WITHOUT EXTENSION*. The format of the filename is one with 5 columns: `node_index,row,col,x,y`. The `x,y` coordinates are in local UTM coordinates.  

|BaselevelJunctions_file
|string
|NULL
|File containing a list of baselevel junctions to determine basins to analyse. The basin numbers should be on individual lines of the text file. You can see the junction numbers by printing the junction numbers to a csv with the command `print_junctions_to_csv`.

|===

==== Output files

The two main output files are once called `_MChiSegmented.csv` and one called `_HilltopData.csv`. 

* `_MChiSegmented.csv`: This file is almost identical to the one produced using link:LSDTT_chi_analysis.html#_point_data_usually_output_as_csv[channel steepness tools], execpt it has a final column with a `segment_number` that is used to link hilltops to channels. 
* `_HilltopData.csv`: This contains data from hillslope traces. These tend to be *very large*.



