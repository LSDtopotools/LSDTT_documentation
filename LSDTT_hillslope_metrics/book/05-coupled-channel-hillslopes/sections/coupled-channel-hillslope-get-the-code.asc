:numbered:
=== Getting *LSDTopoTools2*

The `lsdtt-hillslope-channel-coupling` program sits within *LSDTopoTools2*. 
You can link:LSDTT_installation.html[follow our installation instructions].

If you have installed *LSDTopoTools2* you will already have hillslope channel coupling routines, as well as the other programs necessary for carrying out the hillslope and channel analysis. 

=== Running the analysis

WARNING: This analysis is perhaps the most complex thing you can do with *LSDTopoTools*. It requires a number of different components to be pulled together for the final product, and it works in a few steps because you need the output of one step to set the parameters for the next steps. So please be patient. 

Here are the steps you need to follow:

. You need to extract the channel network. It is actually important to get a proper channel network rather than just using some threshold drainge area, because the analysis is more robust if you are comparing basins of similar order and you can't do that if you don't know where the channels begin.
. If you want, you can use that network to decide on the basins you want to explore. But you can also do that algorithmically. 
. You then need to determine the concavity of the channels because at some point you are going to calculate the steepness of the channels and for this you need a concavity. If you just need a first cut you can use 0.45, but we have tested for concavity in very many places and can assure you that it is highly variable. 
. Once you do those things you can then run the hillslope code. Be warned: this last step can take A VERY LONG TIME. 

==== Getting channel information

. First, you need to extract a channel network. If you have lidar data and you want to know exactly where the channels are, use one of our link:LSDTT_channel_extraction.html#_the_channel_extraction_tool[channel network algorithms]. The link:LSDTT_channel_extraction.html#_the_channel_extraction_tool[wiener method] is both https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1002/2013WR015167[accurate] and https://www.earth-surf-dynam.net/4/627/2016/[does not vary much as a function of grid resolution] so we recommend using this method. If you do extract a channel network you will need the `channel heads csv file` to load into the next step.
+
.. As a brief note, to get a Wiener network, you set the parameter `print_wiener_channels: true`. 
.. The sources or channel heads file will have the extension `Wsources.csv`.

. Second, you should constrain the concavity index of the landscape. To do this use our link:LSDTT_chi_analysis.html#_calculating_concavity[concavity index tool]. Note that there are three main options for selecting basins:
+
.. You can print a junction index raster and selects the junction numbers you want. This requires a junction file, which is a text file that simply lists the junction numbers you want, and you need to set the parameter `baselevel junctions fname: my_jncs.txt`. The text file can be a list of space or comma separated junctions.  
.. You can create a csv file that has latitude and longitude of the basin outlets. To get this to work set the paramters `get_basins_from_outlets: true` and `basin_outlet_csv: test_basins2.csv`. Natually you will need to adjust the name of the file. The file *MUST* have a column named `latitude` and a column named `longitude` and these must be in WGS84 coordinates. 
.. You can use the link:LSDTT_chi_analysis.html#_selecting_channels_and_basins[basin selection options].
+
. Once you have a channel network and a concavity, link:LSDTT_chi_analysis.html#_getting_the_software[extract the segmented channel profile]. You need to make sure the switches `print_segments: true` and `print_segments_raster: true` are included in the parameter file

. Once you have done all that, you should have a number of new files along with your original rasters. The ones needed for the channel-hillslope coupling are
+
* The channel heads file if you are using an extracted channel network (a `HEADS.csv` file) 
* A channel segments raster `_SEGMENTS.bil` that is derived from the run of *chi mapping tool* with the `print_segments: true` and `print_segments_raster: true` parameters in the parameter file. 
+
. These files are ingested by the code `lsdtt-hillslope-channel-coupling`, the instructions of which are below. 

==== Making spaghetti (i.e., doing the full analysis)

Wait, what is all this about spaghetti? One of the plots we make using the hillslope-channel analysis looks a bit like spaghetti, so we call these spaghetti plots. Hungry yet? It is better to run these analyses on a full stomach. 

Like all *LSDTopoTools2* code, you run the analysis with a parameter file. The format of these files is always the same. 

We will walk you though an analysis on a test site so you can see how it works. 

.Quick reminder of LSDTopoTools2 installation
*****************************************************
If any of the below steps don't make sense, read the link:LSDTT_installation.html[full installation instructions].

. Pull and run the docker container `lsdtt_pcl_docker`
. Go into the LSDT
*****************************************************
. First, you need to have link:LSDTT_installation.html[*LSDTopoTools2* installed]. 
