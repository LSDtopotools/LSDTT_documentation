=== Draniage area and channel extraction

. If you run the `WA_BasicMetrics03.driver` you will get a channel network, and some additional rasters.  
+
. The channel network is stored as a `csv` file, `WA_ThirdExample_CN.csv`.
+
. To load this in QGIS, follow the instructions here: <<Import point data from text or spreadsheet>>. You will get something that looks a bit like this:
+
.A simple channel network
image::images/WA_CN.jpg[Whiteadder channel network]


==== Questions for channel extraction. 

* Try changing the `threshold_contributing_pixels` parameter. What happens to the channel network. 
* More advanced: You can get a smoothed elevation raster with the following *driver file* line: `print_smoothed_elevation: true`. Try creating a smoothed elevation raster and then using this smoothed raster for the drainage extraction. You will need to change the `read_fname:` parameter to reflect the smoothed raster.  

=== Sampling a raster with point data. 

In many cases you might want to get some data from your raster to map nto some points you collected either in the field or extracted from a DEM (for example, like your channel network). 

One way to do this is by using the <<Extracting data from a raster onto points,QGIS point sampling tool>>. However, that tool is tempermental and we have another way to do that using *LSDTopoTools*. 

. We have added a driver function that extracts information from a raster and adds it to a csv. 
. You can run it jusgt as you ran the link:LSDTT_basic_usage.html[previous basic analyses] using the parameter file `WA_BasicMetrics07.driver`.
+
. This is what the paramete file looks like:
+
[source,paramfile]
----
# Parameters for burning data
# You need to run the Third Example before running this example to get the channel network CSV
# Comments are preceeded by the hash symbol
# Documentation can be found at: https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html 

# These are parameters for the file i/o
read fname: WA
write fname: WA_SeventhExample
channel heads fname: NULL

# Convert to json
convert_csv_to_geojson: true

# Raster burning
burn_raster_to_csv: true
burn_raster_prefix: WA_ThirdExample_d8_area
burn_data_csv_column_header: d8_area
csv_to_burn_name: WA_ThirdExample_CN.csv
----
+
. The key information is at the end. 
.. `burn_raster_to_csv`: this switches on the "burning" or data from a raster to a csv file.
.. `burn_raster_prefix`: this is the name of the raster whose data you want on the csv. Don't include the extension (e.g., `bil`)
.. `burn_data_csv_column_header`: this is what you will call the new column in your csv. It could be anything, so choose wisely!
.. `csv_to_burn_name`: This is the name of the csv file you want to append with the data from the raster. 

IMPORTANT: You csv needs to have lat-long coordinates in WGS84 (EPSG:4326)

==== Questions:

. Try to change the raster from which you extract data. 
. Try to do the analysis mulpiple times to get multiple raster datasets on your csv file. 
. Try to make your own csv to burn to the raster.
.. First, create a csv with headers latitude and longitude (separated by a comma).
.. Then go into google maps and right click in the Whiteadder catchement, selecting "what's here"?
.. Use the lat long coordinates to enter into your csv, save it, and try to burn raster values to it. 

