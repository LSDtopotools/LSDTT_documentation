=== Channel steepness using chi analysis

In a final example, we will extract some channel steepness metrics. 
We will be using chi analysis, the purpose of which is to normalise channel profiles for drainage area. See the following paper for details: https://onlinelibrary.wiley.com/doi/full/10.1002/esp.3302 

We will use a program within *LSDTopoTools* to do the chi transformation and look at the steepness of the channel. The method is descripbed in this paper: https://agupubs.onlinelibrary.wiley.com/doi/10.1002/2013JF002981

==== Run the chi example

If you have followed the instructions for link:[installing LSDTopoTools] you will already have the required program. 

. Go into the directory with the example data from the previous examples. 
. Run the following command:
+
[source,console]
----
$ lsdtt-chi-mapping WA_ChiMapping01.driver
----
+
. This is a different program from the last example (`lsdtt-chi-mapping`) but the parameter file has the same format:
+
[source,paramfile]
----
# Parameters for extracting simple surface metrics
# Comments are preceeded by the hash symbol
# Documentation can be found at: https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html 

# These are parameters for the file i/o
read fname: WA
write fname: WA_ChiFirstExample
channel heads fname: NULL

# Some basin selection parameters
only_take_largest_basin: true
find_complete_basins_in_window: false
print_basin_raster: true

# We only want the study basin so I have selected the elevation of its outlet
minimum_elevation: 218

# Now the chi analysis
print_segmented_M_chi_map_to_csv: true
print_chi_data_maps: true
convert_csv_to_geojson: true
----
+
. If you have looked at *LSDTopoTools* parameter files before, some of this will look familiar to you. 
+
. This will spit out four files (two geojson and two csv): `WA_ChiFirstExample_MChiSegmented` and `WA_ChiFirstExample_chi_data_map`.
+
==== Looking at channel steepness data

. The `WA_ChiFirstExample_MChiSegmented` files contain channel steepnesses. If we load the `geojson` file it will look like this:
+
.A channel network from chi analysis
image::images/chi_network.png[Whiteadder chi network]
+
. If you click on the data you will see it has loads of different data elements. One of these is `m_chi`. This is the channel steepness. Because this was run with A_0_ = 0, `m_chi` is the same as the channel steepness index, k_sn_. 
+
. You can right click on this layer, and select properties. 
+
.Selecting point properties
image::images/select_properties.png[Selecting point properties]
+
. Then click on the symbology tab:
+
.Selecting symbology
image::images/symbology.png[Selecting symbology]
+
. And then click on graduated:
+
.Graduated colours
image::images/graduated.png[Graduated colours]
+
. And then select the m_chi as the data element by which to colour. You *MUST* click on the *Classify* button below for this to work:
+
.Colour by M_chi_
image::images/select_mchi.png[Colour by M_chi_]
+
. You should end up with a plot that looks a bit like this:
+
.Channel steepness map
image::images/mchi_map.png[Channel steepness map]
