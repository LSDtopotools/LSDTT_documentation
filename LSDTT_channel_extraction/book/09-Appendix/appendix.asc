[appendix]
== Channel extraction parameter file options

The following are the options for the `lsdtt-channel-extraction` program, which you can modify in the parameter file. 

Parameter files are simpletext files that can be modified with a text editor. 


=== Channel extraction options

The parameter file has keywords followed by a value. The format of this file is similar to the files used in our *LSDTT_BasicMetrics* program, which you can read about in the our section introducing LSDTopoTools: link:LSDTT_basic_usage.html[Basic usage of *LSDTopoTools*].

NOTE: The parameter file has a specific format, but the filename can be anything you want. We tend to use the extensions `.param` and `.driver` for these files, but you could use the extension `.MyDogSpot` if that tickled your fancy.

The parameter file has keywords followed by the `:` character. After that there is a space and the value.

.Channel extraction parameter file format
************************************************
. Lines beginning with `#` are comments.
. Keywords or phrases are followed by a colon (`:`).
. The order of the keywords do not matter.
. Keywords are not sensitive, but must match expected keywords.
. If a keyword is not found, a default value is assigned.
************************************************


Below are options for the parameter files. Note that all DEMs must be in ENVI `bil` format (**DO NOT** use ArcMap's bil format: these are two different things. See the link:LSDTT_introduction_to_geospatial_data.html#_data_sources[documentation on data sources] if you want more details).
The reason we use `bil` format is because it retains georeferencing which is essential to our file output since many of the files output to `csv` format with latitude and longitude as coordinates.


[cols="1,1,2", options="header"]
.File input and output options. **These do not have defaults and MUST be declared**.
|===
|Keyword
|Input type
|Description

|write path
|string
|The path to which data is written. **The code will NOT create a path: you need to make the write path before you start running the program.**

|read path
|string
|The path from which data is read.

|write fname
|string
|The prefix of rasters to be written *without extension*.
For example if this is `Test` and you have selected `bil` format then a fill operation will result in a file called `Test_Fill.bil`.

|read fname
|string
|The filename of the raster to be read without extension. For example if the raster is `MyRaster.bil`, read fname will be `MyRaster`.


|channel heads fname
|string
|The filename of a channel heads file. You can import channel heads. If this is set to `NULL` then the channels will be calculated using a pixel threshold.
|===


[cols="1,1,1,2", options="header"]
.Raster preprocessing
|===
|Keyword
|Input type
|default
|Description

|minimum_elevation
|float
|0
|If you have the `remove_seas` keyword set to true, the program will change any elevation node below this value to NoData.

|maximum_elevation
|float
|30000
|If you have the `remove_seas` keyword set to true, the program will change any elevation node above this value to NoData.

|remove_seas
|bool
|false
|If true, this changes extreme value in the elevation to NoData.

|raster_is_filled
|bool
|false
|If true, the code assumes the raster is already filled and doesn't perform the filling routine. This should save some time in computation, but make sure the raster really is filled or else you will get segmentation faults!
|===

[cols="1,1,1,3", options="header"]
.Options for what analysis to do.
|===
|Keyword
|Input type
|Default value
|Description


|print_area_threshold_channels
|bool
|true
|Calculate channels based on an area threshold.

|print_dreich_channels
|bool
|false
|Calculate channels based on the dreich algorithm.

|print_pelletier_channels
|bool
|false
|Calculate channels based on the pelletier algorithm.

|print_wiener_channels
|bool
|false
|Calculate channels based on our wiener algorithm.

|===

[cols="1,1,1,3", options="header"]
.Options for what files to output
|===
|Keyword
|Input type
|Default value
|Description


|print_stream_order_raster
|bool
|false
|Prints a raster with channels indicated by their strahler order and nodata elsewhere. File includes "_SO" in the filename.

|print_channels_to_csv
|bool
|true
|Prints a csv file with the channels, their channel pixel locations indicated with latitude and longitude in WGS84.

|print_sources_to_raster
|bool
|false
|Prints a raster with source pixels indicated.

|print_sources_to_csv
|bool
|true
|Prints a csv file with the sources, their locations indicated with latitude and longitude in WGS84.

|print_fill_raster
|bool
|false
|Prints the fill raster

|write hillshade
|bool
|false
|Prints the hillshade raster to file (with "_hs" in the filename).

|print_wiener_filtered_raster
|bool
|false
|Prints the raster after being filter5ed by the wiener filter to file.

|print_curvature_raster
|bool
|false
|Prints two rasters of tangential curvature. One is short and one long wave (has "_LW" in name) curvature.

|===


[cols="1,1,1,2", options="header"]
.Parameters for extracting the channel network
|===
|Keyword
|Input type
|Default value
|Description

|min_slope_for_fill
|float
|0.0001
|Minimum slope between pixels used by the filling algorithm.

|surface_fitting_radius
|float
|6
|Radius of the polyfit window over which to calculate slope and curvature.

|curvature_threshold
|float
|0.01
|Threshold curvature for channel extraction. Used by Pelletier (2013) algorithm.


|minimum_drainage_area
|float
|400
|Used by Pelletier (2013) algorithm as the minimum drainage area to define a channel. In m^2^


|pruning_drainage_area
|float
|1000
|Used by the wiener and driech methods to prune the drainage network. In m^2^

|threshold_contributing_pixels
|int
|1000
|Used to establish an initial test network, and also used to create final network by the area threshold method.

|connected_components_threshold
|int
|100
|Minimum number of connected pixels to create a channel.

|A_0
|float
|1
|The *A~0~* parameter (which nondimensionalises area) for chi analysis. This is in m^2^. Used by Dreich.

|m_over_n
|float
|0.5
|The *m/n* paramater (sometimes known as the concavity index) for calculating chi. Used only by Dreich.

|number_of_junctions_dreich
|int
|1
|Number of tributary junctions downstream of valley head on which to run DrEICH algorithm.

|===


== Channel extraction file formats

The different channel extraction methods insert different characters into the filenames. 

[cols="1,4", options="header"]
.Characters in filenames denoting the extraction method
|===
|String
|Extraction method


|`AT`
|area threshold

|`AT`
|area threshold

|`AT`
|area threshold

|`AT`
|area threshold

|===


In addition, there are characters at the end of filenames that deonte particular file types
[cols="1,4", options="header"]
.Characters in filenames denoting the extraction method
|===
|Extension
|file type


|`HS.bil`
|A hillshade raster

|`sources.csv`
|A sources file

|`CN.csv`
|A channel network file


|===

=== Channel sources files

This file has five colums:

[source,csv]
----
node,x,y,latitude,longitude
----

* The `node` is the node index, specific to that particular DEM. It cannot be transferred between two different DEMs
* `x` and `y` are the x and y locations in the DEM's coordinante system. It can be transferred between DEMs with the same coordinate system.
* `latitude` and `longitude` are the latitude and longitude in WGS84. The conversion tools in *LSDTopoTools* means that these can be transferred between any raster. 

For historic reasons, we use the `x` and `y` coordinate to read in channel head locations, but this will change (hopefully soon) to read latitude and longitide. 
