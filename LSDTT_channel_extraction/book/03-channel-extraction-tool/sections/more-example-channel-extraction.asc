

=== More complex channel extraction

For higher-resolution DEMs a number of different methods have been developed to extract channel networks more accurately.  This section details how to extract channels using methods relying on geometric signatures of channel incision, primarily how it affects planform curvature. Although many methods have been developed that use a variety of planform curvature to detect channel heads, we will discuss three methods: the Geonet method (developed by Passalacqua et al. 2010a, b, 2012), a method developed by Pelletier (2013) and implemented in **LSDTopoTools**, and a similar geometric method available within **LSDTopoTools**.

A fourth method is the http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/abstract[Dreich method] 
that aims to find channel heads by looking at the break in the properties of topographic profiles 
that occur when fluvial incision gives way to hillslope sediment transport processes. It is different from the geometric methods described above in that it looks for a theoretical signal of fluvial incision rather than the planform curvature of the landscape.  The method you use should be chosen based on the particular aims of your study: if you are interested in extracting the valley network (all concave parts of the landscape) then you should use a geometric method, but if you are interested in extracting the fluvial channel network then you should use the Dreich method.  

The stable version of the Dreich algorithm that was released with our http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/abstract[WRR paper] is hosted on http://csdms.colorado.edu/wiki/Model:DrEICH_algorithm[CSDMS].  The version available from our GitHub repository is the newest version of the code containing some improvements over the stable version.  We have made some changes to the way that valleys are extracted from the DEM before the Dreich algorithm is run.  In our previous version we used a curvature threshold of 0.1 m^-1^ to select valleys for analysis as a pre-processing stage.  We have now changed the code so that this curvature threshold is statistically derived from the landscape in question using the same method as that of the Geonet algorithm (Passalacqua et al., 2010a, b, 2012).  After the initial valley network is extracted, the user may then select the stream order of valleys in which to run the DrEICH algorithm.

. We are staying at Indian Creek. However, this time you will run the second parameter file:
+
[source,console]
----
# lsdtt-channel-extraction IndianCreek_example02.param
----
+
WARNING: This takes a lot longer than the threshold area method! It takes around 22 minutes on my laptop.
+
. The parameter file looks like this
+
[source,paramfile]
----
# These are parameters for the file i/o
read fname: indian_creek
channel heads fname: NULL

# Parameter for filling the DEM
min_slope_for_fill: 0.0001

# Parameters for selecting channels and basins
threshold_contributing_pixels: 1000
connected_components_threshold: 100
print_area_threshold_channels: false
print_wiener_channels: true
print_pelletier_channels: true
print_dreich_channels: true
----
+
. This will calcualte the channel network and sources from three different methods:
.. Wiener
.. Driech
.. Pelletier
+
. You will get both `sources` and `CN` files for each of these methods

The figures below show the extracted channel network for the Indian Creek for the three different methods.

.Map of Indian Creek with channel network extracted from Pelletier algorithm
image::images/ind_so_pel.png[Map of Indian Creek with channel network extracted from Pelletier algorithm]

.Map of Indian Creek with channel network extracted from LSDTopoTools geometric algorithm with an Optimal Wiener filter
image::images/ind_so_wiener.png[Map of Indian Creek with channel network extracted from LSDTopoTools geometric algorithm with an Optimal Wiener filter]

.Map of Indian Creek with channel network extracted from DrEICH algorithm
image::images/ind_so_dreich.png[Map of Indian Creek with channel network extracted from DrEICH algorithm]

