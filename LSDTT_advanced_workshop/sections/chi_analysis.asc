== Channel steepness analysis

The final thing we'll do today is to do some channel steepness analysis.  For background into channel profile analysis using both slope-area plots and latexmath:[\chi], you can refer to our https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_chi_analysis.html[website] which has a lot of detail on this.  Here, I'll just go through how to actually run the code.

=== Using the chi mapping tool

This runs in the same way as the channel extraction and the slope and curvature methods, using the `LSDTopoTools_ChiMudd2014` repository.  We'll select a series of basins to perform the analysis on, and then print out some csv files and rasters which can be used to visualise channel steepness.

Again, we use a parameter file to run the chi mapping tool.  It also has a series of keywords which are used to set which analyses we perform.

. The important elements of the parameter file are:
+
.. `test_drainage_boundaries: true` This is actually the default. We put it in the parameter file here to highlight its importance. The chi coordinate is calculated integrating drainage area along the channel so if your basin is truncated by the edge of the DEM it means that *your chi coordinate will be incorrect*.
+
.. `write hillshade: true`. Does what is says on the tin. It means that you will print a hillshade raster. You really need to do this the first time you analyse a DEM (but you only need to do it once). The reason is that all your figures will look much nicer with a hillshade!
+
. We are going to visualise the output using python.


=== Some comments on basin selection

In the *chi mapping tool*, we have several ways to select basins. We feel the default method is best (`find_complete_basins_in_window`). The options are:

* `find_complete_basins_in_window`: This goes through several refining steps. If first checks every basin in the raster and selects basins within a size window between `minimum_basin_size_pixels` and `maximum_basin_size_pixels`. It then takes the resulting list of basins and removes any that are influenced by the edge of the DEM (to ensure drainage area of the basin is correct). Finally, it removes nested basins, so that in the end you have basins of approximately the same size, not influenced by the edge of the DEM, and with no nested basins.
* `find_largest_complete_basins`: This is a somewhat old version that takes all basins draining to edge and works upstream from their outlets to find the largest sub-basin that is not influenced by the edge. To get this to work you *MUST ALSO* set `find_complete_basins_in_window: false`.
* `test_drainage_boundaries`: If either `find_complete_basins_in_window` or `find_largest_complete_basins` are `true` then this is ignored. If not, then it eliminates any basin that is influenced by the edge of the DEM.
* `BaselevelJunctions_file`: If this points to a file that includes a series of integers that refer to junction indices, it will load these indices. If the file doesn't contain a series of integers the most likely result is that it will crash!

.Example basins extracted for Xi'an province, China
image::images/Xian_coloured_basins.png[width=600,align=center]

=== Running the code

You run the `chi_mapping_tool` the same way as the other programs. Navigate to the driver directory for chi analysis:

[source,console]
----
$ cd /opt/LSDTopoTools/LSDTopoTools/Git_projects/LSDTopoTools_ChiMudd2014/driver_functions_MuddChi2014
----

Then run the code with the path to the input data and the parameter file:

[source,console]
----
$ ./chi_mapping_tool.exe /opt/LSDTopoTools/LSDTopoTools/Topographic_projects/Santa_Cruz/ LSDTT_chi_analysis.param
----


=== Example parameter file

Below is an example parameter file for the Santa Cruz dataset that will extract all the basins and produce chi data for each channel in each basin.

[source,paramfile]
----
# Parameters for performing chi analysis
# Comments are preceded by the hash symbol
# Documentation can be found here:
# https://lsdtopotools.github.io/LSDTopoTools_ChiMudd2014/

# These are parameters for the file i/o
# IMPORTANT: You MUST make the write directory: the code will not work if it doesn't exist.
read path: /opt/LSDTopoTools/LSDTopoTools/Topographic_projects/Santa_Cruz/
write path: /opt/LSDTopoTools/LSDTopoTools/Topographic_projects/Santa_Cruz/
read fname: Pozo_DTM
write fname: Pozo_DTM
channel heads fname: Pozo_DTM_Dsources

# Parameter for filling the DEM
min_slope_for_fill: 0.0001

# Parameters for selecting channels and basins
threshold_contributing_pixels: 5000
minimum_basin_size_pixels: 50000
maximum_basin_size_pixels: 600000
test_drainage_boundaries: false
find_largest_complete_basins: false
find_complete_basins_in_window: true

# The data that you want printed to file
write hillshade: false
print_basin_raster: true

# Chi analysis options
print_chi_data_maps: true
----
