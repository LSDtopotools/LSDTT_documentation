== Channel extraction

Our channel extraction tool bundles four methods of channel extraction. These are:

* A rudimentary extraction using a drainage area threshold.
* The http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/abstract[Dreich method (Clubb et al., 2014)].
* The http://onlinelibrary.wiley.com/doi/10.1029/2012WR012452/abstract[Pelletier (2013) method].
* A geometric method combining elements of https://sites.google.com/site/geonethome/home[Geonet (Passalacqua et al., 2010)] and http://onlinelibrary.wiley.com/doi/10.1029/2012WR012452/abstract[Pelletier (2013)] methods that we developed for http://www.earth-surf-dynam.net/4/627/2016/esurf-4-627-2016.html[Grieve et al. (2016)] and http://onlinelibrary.wiley.com/doi/10.1002/2015JF003747/full[Clubb et al. (2016)] We call this the "Wiener" method (after the https://en.wikipedia.org/wiki/Wiener_filter[wiener filter] used to preprocess the data).

These methods are run based on a common interface via the program `channel_extraction_tool.exe`.

.Example channel network for Indian Creek, Ohio, extracted using our tools
image::images/ind_so_pel.png[width=400,align=center]

=== The parameter files

Like most of *LSDTopoTools*, you run this program by directing it to a parameter file. The parameter file has a series of keywords. Our convention is to place the parameter file in the same directory as your data.

NOTE: The parameter file has a specific format, but the filename can be anything you want. We tend to use the extensions `.param` and `.driver` for these files, but you could use the extension `.MyDogSpot` if that tickled your fancy.

The parameter file has keywords followed by the `:` character. After that there is a space and the value.

.Channel extraction parameter file format
************************************************
. Lines beginning with `#` are comments.
. Keywords or phrases are followed by a colon (`:`).
. The order of the keywords do not matter.
. Keywords are not sensitive, but must match expected keywords.
. If a keyword is not found, a default value is assigned.
************************************************

==== Example channel extraction parameter file

Below is an example parameter file. This file is included in the shared folder with the DEM data.

[source,paramfile]
----
# Parameters for channel extraction
# Comments are preceeded by the hash symbol
# Documentation can be found here:
# TBA

# These are parameters for the file i/o
# IMPORTANT: You MUST make the write directory: the code will not work if it doesn't exist.
read path: /opt/LSDTopoTools/LSDTopoTools/Topographic_projects/Santa_Cruz
write path: /opt/LSDTopoTools/LSDTopoTools/Topographic_projects/Santa_Cruz
read fname: Pozo_DTM
write fname: Pozo_DTM
channel heads fname: NULL

# Parameter for filling the DEM
min_slope_for_fill: 0.0001

# Parameters for selecting channels and basins

# threshold_contributing_pixels: 2500
print_area_threshold_channels: false
print_wiener_channels: true
print_pelletier_channels: false
print_dreich_channels: false

# write hillshade: true
print_stream_order_raster: true

----

For more information on all the different options available see https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_channel_extraction.html[the full channel extraction documentation].

=== Running the code

To run the `channel_extraction_tool`, first navigate to the channel extraction repository:

[source,console]
----
$ cd /opt/LSDTopoTools/LSDTopoTools/Git_projects/LSDTopoTools_ChannelExtraction
----

The objects which host the main functionality are stored here.  We keep the driver functions, used to actually run the code, in the folder `driver_functions_ChannelExtraction`.

[source,console]
----
$ cd driver_functions_ChannelExtraction
----

Once you're in the right folder, you can run the code with:

[source,console]
----
$ ./channel_extraction_tool.exe /path/to/data/folder name_of_parameter_file.param
----

For our example, it would be:

[source,console]
----
$ ./channel_extraction_tool.exe /opt/LSDTopoTools/LSDTopoTools/Topographic_projects/Santa_Cruz/ LSDTT_channel_extraction.param
----
