
=== Full instructions on setting up our Vagrant servers

==== First steps: Starting a Vagrant box

IMPORTANT: You will need sufficient space on your hard disk to host a guest operating system. You also need room for the **LSDTopoTools** dependencies. You will struggle if you have less than *5Gb* free.

https://www.vagrantup.com/[Vagrant] is software that automates the creation and provisioning of virtual machines. What does that mean? It means that you will create a Linux server that runs inside of your day-to-day computer. This server will run even if you are using a different operating system (e.g., Windows). Vagrant machines can be configured using a vagrantfile, so you download our vagrantfile and you simply point vagrant to it and should get a working server that can run LSDTopoTools.

. You need software for running virtual machines. We recommend https://www.virtualbox.org/[virtualbox] since it is both well supported and free. Download and install. Our instructions assume you are using virtual box. As of 01-Nov-2017 Vagrant does not work with VirtualBox 5.2. Make sure you download Virtualbox 5.1 instead: https://www.virtualbox.org/wiki/Download_Old_Builds_5_1

. Download and install https://www.vagrantup.com/[Vagrant]. As of 22-Dec-2017 Vagrant 2.01 has conflicts with some ruby packages. Make sure you download Vagrant 2.0.0: https://releases.hashicorp.com/vagrant/2.0.0/

. Vagrant works via command line, so you will need to know how to open a terminal on http://www.macworld.co.uk/feature/mac-software/get-more-out-of-os-x-terminal-3608274/[OS X], Linux (usually you can open one using `ctrl-alt-T`, but if you use Linux that means you were born knowing how to open a terminal), or a http://www.tenforums.com/tutorials/25581-windows-powershell-open-windows-10-a.html[Windows powershell].

. If you are working on Windows, you will probably have to restart after installing Vagrant so that Windows can register the path to Vagrant.

. Okay, we now assume you have installed everything and are in a terminal or powershell. You need to make a directory where you keep information about your vagrant boxes. I made a folder names `vagrantboxes` and then subfolders for different boxes.

. If you are in Windows, you will need an https://en.wikipedia.org/wiki/Secure_Shell[ssh] utility to communicate with your vagrant box. You should download `putty.exe` from the http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html[putty website]. In  Linux and MacOS *ssh* utilities are already installed.

. Now you should fetch one of our vagrantfiles from our git repo: https://github.com/LSDtopotools/LSDTT_vagrantfiles
+
.Get the Vagrant Files
************************************************
. The 32 bit file is here: https://raw.githubusercontent.com/LSDtopotools/LSDTT_vagrantfiles/master/Vagrantfile_32bit_FFTW
. The 64 bit file is here: https://raw.githubusercontent.com/LSDtopotools/LSDTT_vagrantfiles/master/Vagrantfile_64bit_FFTW
. Although most computers today are 64 bit, most of them, as default, disable guest 64 bit operating systems. Unless you know how to turn this on http://stackoverflow.com/questions/27884846/virtualization-not-enabled-in-bios[(for example see this link)], you should choose the 32 bit vagrantfile.
. Save one of these files into the directory for your vagrant files. See below for the appropriate directory structure.
************************************************
+
. Rename the vagrantfile from the repo (either `Vagrantfile_32bit_FFTW` or `Vagrantfile_64bit_FFTW`) simply `vagrantfile`

. If you use our vagrant files, you will need to make a directory `LSDTopoTools` in the same directory as your folders for different vagrant boxes.
For example, you might make a directory `C:\VagrantBoxes\`, and in that directory you can put both `LSDTopoTools` and `Ubuntu32_FFTW` (or some such name) directories. You will put the vagrant file in the `Ubuntu32_FFTW` directory.
Your tree might look a bit like this:
+
[source, directory_struct]
----
C:\vagrantboxes\
|--Ubuntu32_FFTW
   |-- vagrantfile
|--Ubuntu64_FFTW
   |-- vagrantfile
|--LSDTopoTools
----
+
IMPORTANT: It is **ESSENTIAL** that the LSDTopoTools folder is present and is one directory level lower than the vagrant file. If this is not true, the vagrant machine will **NOT WORK**.
+
NOTE: In the above file structures the vagrantfiles have been renamed from the vagrant files in our repository.
+
. Go into the folder with the operating system you want (e.g. `Ubuntu32_FFTW`):
+
[source,console]
----
PS: > cd C:\VagrantBoxes
PS: > cd C:\Ubuntu32_FFTW
----
+
. Now start your vagrant box (this might take some time since it has to fetch stuff from the internet):
+
[source,console]
----
PS: > vagrant up
----
+
IMPORTANT: You do not need to download a "base box" (that is a Linux operating system, in this case 32 bit Ubuntu) before you run `vagrant up`: Vagrant does this for you.
However if you are running `vagrant up` for the first time Vagrant will download the box for you which will take some time (it is ~400Mb).
You will only need to download the base box once.
+
. Congratulations! You now have a functioning Vagrant box!! Now you need to log on to the box.
+
NOTE: If you want to update the base box you can use `vagrant box update` command from the powershell or terminal windows.

==== Logging on to your Vagrant box

. All right! Your Vagrant box is running. Other than a sense of vague accomplishment, this doesn't really help you run LSDTopoTools. You need to log on to the box.
You will operate your vagrant box as a server: you log into the machine and run code on it, but you won't have pretty windows to look at.
You will run everything through an ssh terminal, using a command line interface.

. We do this using https://en.wikipedia.org/wiki/Secure_Shell[ssh].
+
.A note on your vagrant ssh server
************************************************
* https://en.wikipedia.org/wiki/Secure_Shell[ssh] allows you to communicate securely with a server on an unsecured connection (it encrypts communication between you and the server).
* You will use ssh to communicate with your Vagrant server. This server is *not on the internet* but rather is living *on your computer*.
* Vagrant is clever in that it sets up an https://en.wikipedia.org/wiki/IP_address[IP address] for your vagrant server (in other words your Linux machine living on your host computer, which could be Windows, Linux or OSX), and as such ssh can establish a connection to this machine via ssh.
* Vagrant's default settings are to set your server up to sit on host **127.0.0.1** and port **2222**. You will need to use these settings in putty.exe
* When you first log in, putty or other ssh clients will ask you to cache a new host key.
************************************************
+
. If you are starting from a Linux or OSX machine, an ssh client is built into your command prompt and you can just type `vagrant ssh` into the command prompt.

. If you are on Windows, you need to download http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html[putty.exe] and run it.

. In putty, set the host to **127.0.0.1** and the port to **2222**. These are vagrant's default settings.

. You will need to add the RSA key to your cache (just say yes: remember you are not connecting to the internet where baddies can spy on you but rather a server running on your own computer).

. Now you need to **log in**. Your vagrant box has a username of **vagrant** and a password of **vagrant**.

==== Your Vagrant box and file syncing

. So you are logged in. Now what? It turns out Vagrant has done some clever things with your files.

. Vagrant can https://www.vagrantup.com/docs/getting-started/synced_folders.html[sync folders] across your Vagrant box and your host computer (that is, the computer you started vagrant from).

. When you log in to your vagrant box, you will not be in the same folder where I have built the **LSDTopoTools** file structures. You need to navigate down to this:
+
[source,console]
-------------------------------
$ pwd
/STUFF
$ cd ..
$ cd ..
$ pwd
/STUFF
$ cd LSDTopoTools
$ ls
STUFF
-------------------------------
+
You can also jump directly there:
+
[source,console]
-------------------------------
$ cd /LSDTopoTools
-------------------------------
+
. As you can see above, the **LSDTopoTools** folder contains folders for different **LSDTopoTools** packages, for topographic datasets.
+
. Here is the amazing thing: the files that are in LSDTopoTools folder in your vagrant box **ARE ALSO** visible, and synced, in your host computer.
So if you use **LSDTopoTools** to do some analysis within your vagrant box, you will be able to see the files within your host computer as well.
This means that you can, for example, do a Linux-based **LSDTopoTools** analysis and then plot that analysis in a GIS on your host windows box without having to transfer files.
Not only that, but you can modify the code, update python scripts, change parameter files, etc., with your favourite text editor in Windows (or MacOS, or whatever) and those files will be visible to your Vagrant box. Fantastic!

==== Updating to the latest versions of the software

To check out the latest version of our software you can run the https://www.vagrantup.com/docs/cli/provision.html[vagrant provision] command
[source,console]
-------------------------------
PS: > vagrant up
PS: > vagrant provision
-------------------------------

==== Shutting things down

When you are finished with your session, you just need to go into the powershell or a terminal and type:

[source,console]
-------------------------------
PS: > vagrant halt
-------------------------------


==== If you want to start from scratch

If you want to remove the virtual machine, start it up and then run https://www.vagrantup.com/docs/cli/destroy.html[vagrant destroy]:

[source,console]
-------------------------------
PS: > vagrant up
PS: > vagrant destroy
-------------------------------



