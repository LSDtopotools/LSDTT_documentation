
=== Technical details on vagrant

Here are some technical details on vagrant. Hopefully you will never have to read any of this. 

==== Brief notes for setting up your own Vagrant server

IMPORTANT: This section is for customising your vagrant environment (or rather, your Ubuntu environment that vagrant sets up for you) and can be safely ignored by 95% of **LSDTopoTools** users. We include the below notes for obsessive hackers who have nothing better to do.

We have written Vagrant files for you so you don't have to customise your working environment, but if you want to set up your own Vagrant boxes with your own software here are some notes.


===== Initiating a Vagrant box

1. Go into an empty folder to start a new Vagrant box.
2. Initiate Vagrant with:
+
[source,console]
-------------------------------
PS> C:\> vagrant init
-------------------------------
+
Alternatively you can initiate with a `base box`. In this example we use the Ubuntu precise 32 base box:
+
[source,console]
-------------------------------
PS> C:\vagrant init ubuntu/precise32
-------------------------------
+
3. This command (`init`) will simply make a vagrant file. To get the server up and running you need to `up` it. Before you do that you probably want to modify the vagrant file.
4. One of the things you probably need to modify is the memory assigned to your guest vagrant box. In the vagrant file you should have:
+
[source,vagrantfile]
-------------------------------
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    vb.memory = "3000"
  end
-------------------------------
+
The default memory is something small, and the problem with it is that it will take the guest operating system too long to boot, and vagrant will time out. I would give the vagrant box 3-4 Gb of memory.
+
5. Now you can `up` your vagrant box. In the folder with the vagrant file, type:
+
[source,console]
-------------------------------
PS> vagrant up
-------------------------------
+
6. If this is the first time booting the linux machine, this will take a while.


===== Notes on the base box

Vagrant sets up a Linux server living in your computer (it is called the *Host* computer). The server will run a Linux operating system, and you need to choose a functioning base system
https://atlas.hashicorp.com/boxes/search[vagrant base boxes]. Here we have started with `ubuntu/precise32`. You might want to try other base boxes, they can be found at the https://atlas.hashicorp.com/boxes/search[atlas website].

NOTE: If you choose a base box that you do not already have (and you start with none), vagrant will download it. They are big!! Usually over 500Mb (each is a fully operational linux operating system). You will either need a fast internet connection or a lot of time. Make sure you also have enough room on your hard disk.

**You do need to be careful with base boxes!**

IMPORTANT: Not all base boxes work! On many windows machines, you can only run a 32 bit version of linux, even though you are almost certainly running 64 bit windows. You can change this by going into your BIOS and changing the settings, but that is dangerous and if you do not know what your BIOS is do not even think about attempting to change these settings.

In testing, I found many bases boxes did not work at all. The one that worked well for me was the `ubuntu/precise32` box. You can just `vagrant init` an empty vagrant instance and change the box in the vagrantfile with `config.vm.box = "ubuntu/precise32"`.

You can update your base box with the command `vagrant box update`.

===== Details of provisioning

If you change your vagrantfile with the box still running, you can run the new provisioning with:

[source,console]
-------------------------------
PS> vagrant provision
-------------------------------

If you have downloaded our vagrant files, the provisioning of your virtual server should be automatic. However, you may wish to know what is happening during the provisioning, so here are some notes.

To install software, we use the shell provisioning system of vagrant. This should go into the vagrantfile and will look a bit like this:

[source,vagrantfile]
-------------------------------
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update
    sudo apt-get install -y git
  SHELL
-------------------------------

In the above shell command, we are installing git. The `-y` flag is important since apt-get will ask if you actually want to download the software and if you do not tell it `-y` from the shell script it will just abort the installation.

You sync folders like this:

[source,vagrantfile]
-------------------------------
  config.vm.synced_folder "../LSDTopoTools", "/LSDTopoTools"
-------------------------------

Were the first folder is the folder on the host machine and the second is the folder on the Vagrant box.