== Extra dependencies for swaths and point clouds

Some of our tools require the point cloud library. TO get this working you need a few different utilities and libraries (take a deep breath)

. The `cmake` utility. This is like `make` but is required for our tools that examine point clouds,
  since it is required by something called the http://pointclouds.org/[point cloud library].
. http://pointclouds.org/[pcl]: The Point Cloud Library.
. http://www.liblas.org/[libLAS]: a library for working with LAS format data.

Our Vagrant installation installs these automatically. The docker installation (since it is 3rd party) does not. However you can install on an Ubuntu system (and the Docker installation is Ubuntu) using the following instructions.

=== Install the Point Cloud Library

If you are using an older version of ubuntu there is a package. Newer versions of Ubuntu don't have it, so you will need to install by hand

==== Ubuntu 14 and 12

This is relatively painless (we hope):

[source,console]
----
$ sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl
$ sudo apt-get update
$ sudo apt-get install libpcl-all
----

==== Ubuntu 16.04 LTS

If you are using ubuntu 16.04, the above commands won't work as the repository is broken. You can install the `pcl` library using the following steps:

Install oracle-java8-jdk:
[source,console]
----
$ sudo add-apt-repository -y ppa:webupd8team/java && sudo apt update && sudo apt -y install oracle-java8-installer
----

Install various dependencies and pre-requisites:
[source,console]
----
$ sudo apt -y install g++ cmake cmake-gui doxygen mpi-default-dev openmpi-bin openmpi-common libusb-1.0-0-dev libqhull* libusb-dev libgtest-dev
$ sudo apt -y install git-core freeglut3-dev pkg-config build-essential libxmu-dev libxi-dev libphonon-dev libphonon-dev phonon-backend-gstreamer
$ sudo apt -y install phonon-backend-vlc graphviz mono-complete qt-sdk libflann-dev libflann1.8 libboost1.58-all-dev

$ cd ~/Downloads
$ wget http://launchpadlibrarian.net/209530212/libeigen3-dev_3.2.5-4_all.deb
$ sudo dpkg -i libeigen3-dev_3.2.5-4_all.deb
$ sudo apt-mark hold libeigen3-dev

$ wget http://www.vtk.org/files/release/7.1/VTK-7.1.0.tar.gz
$ tar -xf VTK-7.1.0.tar.gz
$ cd VTK-7.1.0 && mkdir build && cd build
$ cmake ..
$ make
$ sudo make install
----
Install Point Cloud Library v1.8:

[source,console]
----
$ cd ~/Downloads
$ wget https://github.com/PointCloudLibrary/pcl/archive/pcl-1.8.0.tar.gz
$ tar -xf pcl-1.8.0.tar.gz
$ cd pcl-pcl-1.8.0 && mkdir build && cd build
$ cmake ..
$ make
$ sudo make install
----
Do some clean up:
[source,console]
----
$ cd ~/Downloads
$ rm libeigen3-dev_3.2.5-4_all.deb VTK-7.1.0.tar.gz pcl-1.8.0.tar.gz
$ sudo rm -r VTK-7.1.0 pcl-pcl-1.8.0
----
You should now have pcl installed on your system! You can do a small test of the installation if you want to:
[source,console]
----
$ cd ~
$ mkdir pcl-test && cd pcl-test
----

Create a CMakeLists.txt file and save this in the directory `pcl-test`:

----
cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
project(pcl-test)
find_package(PCL 1.2 REQUIRED)

include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

add_executable(pcl-test main.cpp)
target_link_libraries(pcl-test ${PCL_LIBRARIES})

SET(COMPILE_FLAGS "-std=c++11")
add_definitions(${COMPILE_FLAGS})
----

Create a file and call it `main.cpp`:

----
#include <iostream>

int main() {
    std::cout << "hello, world!" << std::endl;
    return (0);
}
----

Compile the cpp file and then test it :
[source,console]
----
$ mkdir build && cd build
$ cmake ..
$ make
$ ./pcl-test
----
Output should be `hello, world!`

=== Extra libraries for the floodplain and terrace extraction

You might find you need to install a couple of other libraries for the floodplain and terrace drivers to compile properly. If you are using Ubuntu, you can do this using the following commands:

[source,console]
----
$ sudo apt-get update
$ sudo apt-get install libgoetiff-dev
$ sudo apt-get install liblas-dev
----
