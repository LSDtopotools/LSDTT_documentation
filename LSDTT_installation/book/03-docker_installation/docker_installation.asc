== Installing LSDTopoTools using Docker

=== Should I use Docker or Vagrant?

*Short answer*: If you have MacOS, Linux or Windows 10 Enterprise, use Docker. Otherwise use Vagrant.

*Long answer*: There are https://deliciousbrains.com/vagrant-docker-wordpress-development/[many], https://www.vagrantup.com/intro/vs/docker.html[many], https://stackoverflow.com/questions/16647069/should-i-use-vagrant-or-docker-for-creating-an-isolated-environment[many] https://www.devteam.space/blog/docker-vs-vagrant-which-is-better-for-development/[articles] comparing vagrant to docker.
The docker setup is probably a bit simpler than the vagrant setup but (_and this is a big but_) it won't work on a Windows machine unless you have Windows 10 Enterprise. It does work on any recent version of Linux and MacOS. If you have MacOS, native Linux or Windows 10 Enterprise you should consider using Docker since it involves fewer steps than our VirtualBox+Vagrant setup.

=== Installing Docker

https://www.docker.com/[Docker] is software for creating and managing https://en.wikipedia.org/wiki/Operating-system-level_virtualization[containers]. These containers are not complete operating systems, like one creates using https://www.virtualbox.org/wiki/Downloads[VirtualBox] and https://www.vagrantup.com/[Vagrant], so the boot time is quicker. Docker is perhaps simpler to use but does not work on every operating system.

To set up *LSDTopoTools* using Docker:

. Download and install https://www.docker.com/docker-windows[Docker for Windows] (only works with Windows 10 enterprise), https://www.docker.com/docker-mac[Docker for Mac], or Docker for https://www.docker.com/docker-ubuntu[Ubuntu] or https://www.docker.com/docker-debian[Debian].

.. On Mac we recommend installing docker using brew: `brew cask install docker`

. We will henceforth assume that you actually have a functioning version of Docker on your host machine. If you want more details about how to use docker, or getting it set up (particularly in Windows, in Linux and MacOS this is more straightforward), see our appendix on Docker.

=== The four LSDTopoTools images

*LSDTopoTools* has four different containers. If you are an *LSDTopoToools* developer you will probably use all four. Most users will only use two of them. The four containers are:
. `lsdtt-alpine`: This is basic *LSDTopoTools* container. It uses a very lightwight linux distrubution called the [alpine] distribution. For many users, this is the only container you will need. When build, it is a but under 300 Mb.
. `lsdtt-pcl`: A few of our routines (notably the terrace extraction routines and any routines using swath profiling) require something called the [point cloud library (PCL)]. This library is *ENORMOUS* and a massive pain to install. It does everything the `lsdtt-alpine` container does, and more. It is big, over 2 Gb. However, if you need this one you can use it instead of the `lsdtt-alpine` container. 
. `lsdtt-viz`: This container installs all the python routines you need if you want to use our visualisation tools. Our tools require multiple python packages, meaning that this container is also quite large. If you use a GIS to look at our data, you won't need this. However we do all our visualisation in python and have written lots of automation scripts, so if you think you will used *LSDTopoTools* routinely you might want to grab this dockerfile. 
. `lsdtt-docs`: Our documentation is all written in asciidoc format, and processed with the extremely awesome [asciidoctor]. It runs in the Ruby programming language, and requires some stuff to be installed. We have a container for building the documentation so you don't need to worry about installing the correct stuff. It is unlikely you will need this unless you are an *LSDTopoTools* developer.

.Which container do I use?
************************************************
* Pick *either* `lsdtt-alpine` or `lsdtt-pcl` for the main programs. The former is a small container but can't do the terrace algorithms. If you anticipate extracting terraces or floodpains use the latter. It is much bigger: `lsdtt-alpine` is an 88 Mb download and ~240Mb unpacked. `lsdtt-pcl` is a 664 Mb download and ~2 Gb unpacked. 
* `lsdtt-viz` is for our python plotting routines. If you just intend to use a GIS to look at *LSDTopoTools*, you don't need this. But if you want to reproduce the figures we have in our papers you will need this container. *LSDMappingTools* needs a lot of python packages so the container is large, I'm afraid. 
* `lsdtt-docs`: he containes the software needed to compile our documentation. The documentation is available on a website (you are reading it) so you only need this container if you are actually going to be writing *LSDTopoTools* documentation. 
************************************************

.How do I get the containers
***********************************************
*There are two options for getting the containers!*

* Option 1: Download the images from https://hub.docker.com/[Docker hub] (search for `lsdtopotools`). 
* Option 2: Build the containers from the raw dockerfiles. 

Option 1 is better. Option 2 is only for enthusiasts. 
***********************************************

=== Before you do anything else: Set up a directory to share with docker containers. 

When you run *LSDTopoTools*, or our visualisation routines, you will want to see the resulting files. Docker containers have self contained filesystems that cannot be read on your host operating system unless you tell docker to "share" the directories. These are called "volumes" in docker speak. 

. First, make a directory in your host operating system where you will put all the files associated with *LSDTopoTools*. I put mine in `C:\DockerBoxes\LSDTopoTools\`  

. To share a directory in docker you use the `-v` flag. 
.. Following the `-v` flag you need to tell it which directories to share. 
.. The format is: `/Host/directory:/Container/directory`
.. 


=== First option: pull the docker images



=== Second option: build the docker containers

IMPORTANT: Unless you are a docker purist, please ignore this section and use Option 1 instead.

. Create a folder where you are going to put files associated with docker. In the examples I will assume these are in `C:\Docker\LSDTopoTools\` (this is a windows path, since the majority of organisations use the Windows operating system).
.. If you have `git` on your computer, you can clone our dockerfiles into this directory. 
.. If you don't have `git`, download and unzip the contents of the repository. 
. If you are only running *LSDTopoTools* for routine analysis and looking at the results in GIS software, you will only need one docker container. 
. We are only going to work with the `lsdtt-alpine` container. But the steps are basically the same for all the other containers. 
. Start a terminal (MacOS or Linux) or powershell (Windows) with docker enabled. 
. Go into the directory inside you docker directory (in my case `C:\Docker\LSDTopoTools\`) and go into the `lsdtt_alpine` directory. In windows, if your directory is called the same thing as my directory, you can get there with:
+
[souce, console]
----
PS> cd C:\Docker\LSDTopoTools\lsdtt_alpine
----
+
. Build the docker container:
+
[souce, console]
----
PS> docker build -t lsdtt-alpine .
----
+
. The `-t` flag in docker stands for "tag". It is the name of the container. You could call it anything you want but all documentation henceforth assumes you have called it `lsdtt-alpine`. 
.. If you are building a different container, use a different tag, e.g., `lsdtt-pcl` for the `lsdtt-pcl` container. 

=== 


. Run the following command in a https://en.wikipedia.org/wiki/Cmd.exe[command prompt] or https://www.wikihow.com/Open-a-Terminal-Window-in-Mac[terminal for Mac] or Linux (if you use Linux I am sure you don't need instruction on how to open a terminal):
+
[source, console]
----
docker run --rm -it -v C:\DockerBoxes\LSDTopoTools\:/LSDTopoTools afriel/lsdtopotools
----
+
Note that you will need to modify the path (here `C:\DockerBoxes\LSDTopoTools\`) to reflect your own directory where you want your LSDTopoTools files.
+
. You should get a prompt that looks like this, perhaps with some different
letters and numbers after the @:
[source, console]
----
root@9f73030d8598:/LSDTopoTools#
----
. If this is your first time using the tools and your LSDTopoTools directory is
empty, you will need to run the install script. In the prompt, enter:
`install.sh` and hit `enter`.
+
. Some users have reported permissions problems with running `install.sh` on a fresh docker install. If this happens you need to run this command `chmod 0744 /bin/install.sh` to update the permissions on the install script and then run `install.sh` as normal.
+
. Follow docker documentation for your operating system to start and shut down docker containers.
