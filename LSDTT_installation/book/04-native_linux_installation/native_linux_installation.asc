== Installing natively on a Linux system

Our software is designed for linux operating systems but we do recommend you use our <<Installing LSDTopoTools using Docker,Docker setup>>  because in those two cases you will be using the same environment as the developers so it will be easier to answer questions when you have problems. However, if you just want *LSDTopoTools* on your Linux machine, follow these steps:

=== Get the associated software you need

. Start a terminal session.
. Install some essential softare (we will use Ubuntu installation, you need to modify these if you are on another version of Linux). This assumes you have the GNU pass:[c++] tools:
+
[source,console]
----
$ sudo apt-get install -y git
$ sudo apt-get install -y gdal-bin
$ sudo apt-get install -y python-gdal
$ sudo apt-get install -y libfftw3-dev
$ sudo apt-get install -y cmake
----

=== Get the LSDTopoTools2 code and install


. You probably should make a directory where you keep everything associated with *LSDTopoTools*. A suggested name for this directory is *LSDTopoTools*: it says what it does on the tin. Go into that directory once you have created it.  

. Next, clone the https://github.com/LSDtopotools/LSDTopoTools2[*LSDTopoTools2* repository] here:
+
[source,console]
----
$ git clone https://github.com/LSDtopotools/LSDTopoTools2.git
----
+
. Go into that new directory:
+
[source,console]
----
$ cd LSDTopoTools2
----
+
. Run the setup tool
+
[source,console]
----
$ sh lsdtt2_setup.sh
----
+
. You can now navigate to your data and start using *LSDTopoTools*. See link:LSDTT_basic_usage.html[our section on first analyses in *LSDTopoTools*].

=== Starting an LSDTopoTools2 session after your first installation

* Whenever you return to run an LSDTopoTools2 session, you will need to tell the computer where your program files are. You cave two options:
** Run `sh lsdtt2_setup.sh` in the LSDTopoTools2 directory. This gets the latest version of the software, recompiles, and points your session to the program files. 
** Run `sh lsdtt2_terminal.sh` in the LSDTopoTools2 directory. This just points your session to the program files.
* You must do one of those two things otherwise your computer will not know where the program files are. 
* As an alternative, you can go into yor `.bashrc` file and add the `/path/to/LSDTopoTools2/bin` directory to your `$PATH`. You will need to change the full path to reflect your own directory system. If you don't know what a `.bashrc` file is you are probably better off running the `lsdtt2_terminal.sh` script. 

=== Getting the example data

. Create a data directory. The documentation assumes this directory structure:  +
| Your home directory (native linx) or the root directory (docker)  +
--|LSDTopoTools  +
----| LSDTopoTools2  +
------| subdirectories with source code and programs +
----| data  +
------| subdirectories with different projects +
----| Other LSDTopoTools directories (e.g., LSDMappingTools, LSDTT_documentation)
+
. Go into the data directory and grab the example data from github, then unzip and clean the zip file:
+
[source,console]
----
$ cd data
$ wget https://github.com/LSDtopotools/ExampleTopoDatasets/archive/master.zip
$ unzip master.zip
$ mv ./ExampleTopoDatasets-master ./ExampleTopoDatasets
$ rm master.zip
----
+
. You should now have the example data for further examples.

=== Installing LSDTopoTools using Windows Subsystem for Linux


Some users have had difficulties getting Docker to install on Windows as it can require changing a setting in the BIOS. If this is the case, you can try to install the code natively using https://docs.microsoft.com/en-us/windows/wsl/faq[Windows Subsystem for Linux].  This is a piece of software from Microsoft that allows you to run a small Linux environment (in our case Ubuntu) from your Windows operating system.  We will download this software from the Microsoft Store, which should be preinstalled on any Windows 10 system.

. Firstly, download the Ubuntu app from Microsoft Store. If you can't find it, then you can also get it from https://www.microsoft.com/en-gb/p/ubuntu/9nblggh4msv6?rtc=1&activetab=pivot:overviewtab[this link]. You might need to restart your computer as prompted following this step.

WARNING: The download here is around ~200 Mb, so make sure you have enough space on your system for this. You don't need to register to the store in order to download the app.

. Launch the Ubuntu app by clicking on it from the Start menu.  You will then be prompted to create a new user account and password - *you can choose whatever you want for this, but make sure you remember it! The password is important for installing packages in the next steps.*
. The first time you launch, make sure you update and upgrade your standard packages by typing:
+
[source,console]
----
$ sudo apt update && sudo apt upgrade
----
+
. Now install the dependencies for LSDTopoTools:
+
[source,console]
----
$ sudo apt install -y build-essential git gdal-bin python-gdal libfftw3-dev cmake
----
+
. Then make a new directory for the LSDTopoTools code and download it from GitHub:
+
[source,console]
----
$ mkdir LSDTopoTools && cd LSDTopoTools
$ git clone https://github.com/LSDtopotools/LSDTopoTools2.git
----
+
. This will create a directory called `~/LSDTopoTools/LSDTopoTools2` in your home. Navigate to this directory and run the start up script:
+
[source,console]
----
$ cd LSDTopoTools2
$ bash lsdtt2_setup.sh
----
+
. This script will set up the code: we then need one more command to add the binary to your local path.  First run:
+
[source,console]
----
$ cd bin
$ pwd
----
+
. This will print out a directory path. Copy this directory path, let's call it `/path/to/your/bin` for the sake of this example, and run:
+
[source,console]
----
$ export PATH=/path/to/your/bin:$PATH
----
+
. This will link the `bin` folder to the system path and make the code executable from anywhere in the Linux subsystem.

==== Accessing data from Windows

Once installed in the linux subsystem, `Microsoft` strongly warns against accessing to Ubuntu file system from `windows` as it can damaged it quite easily. However the opposite is fairly easy: the easiest way to do that is to store data in your `C` drive, accessible from the linux subsystem with:

[source,console]
----
$ cd /mnt/c/
----



