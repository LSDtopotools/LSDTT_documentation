=== Examples using LSDMappingTools

We are now going to take a brief detour into our https://github.com/LSDtopotools/LSDMappingTools[mapping tools]. 

https://github.com/LSDtopotools/LSDMappingTools[*LSDMappingTools*] are written in python and have been built up over the years to avoid having to click mice and interact with GIS software. 

==== Installing LSDMappingTools for chi visualisation

The main barrier to using *LSDMappingTools* is installing the python packages. We have done all that work for you in a https://hub.docker.com/r/lsdtopotools/lsdtt_viz_docker[Docker container].

You can also install the conda environment by using our https://raw.githubusercontent.com/LSDtopotools/LSDMappingTools/master/conda_environments/conda_list_July2019.txt[latest conda environment file]. 

.Quick installation instructions
***********************************************

Full instructions are on the https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_visualisation.html#_installing_the_lsdtopotools_python_toolchain[LSDTopoTools visualisation section].

The basic instructions are:

* In docker:
+
[source,console]
----
$ docker run -it -v C:\LSDTopoTools:/LSDTopoTools lsdtopotools/lsdtt_viz_docker
----
+
** Then run `Start_LSDTT.sh` to download the tools. 
* For native installation:
** Download and install https://docs.conda.io/en/latest/miniconda.html[miniconda] (python 3 version).
** Grab the https://raw.githubusercontent.com/LSDtopotools/LSDMappingTools/master/conda_environments/conda_list_July2019.txt[environment file].
** Run:
+
[source,console]
----
$ conda create --name LSDMT --file conda_list_July2019.txt
----
+
Note: if you don't save the file as `conda_list_July2019.txt` then you will need to change the name of the file above. 
+
. Once you have done that, clone the https://github.com/LSDtopotools/LSDMappingTools[*LSDMappingTools* repository]. 
+
** Warning: this method will take *a very long time*. The docker version is much, much faster and less likeley to fail.
***********************************************

==== Plotting some chi results

. You need some data, so if you haven't yet, go back and run example 1 of this chapter. 
. We are going to assume you are in the docker container, and you have run `Start_LSDTT.sh`. See the https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_visualisation.html#_installing_the_lsdtopotools_python_toolchain[LSDMappingTools installation section] for details. 
. Navigate to the directory with the plotting tools:
+
[source,console]
----
$ cd /LSDTopoTools/LSDMappingTools
----
+
. The chi mapping script is `PlotChiAnalysis.py`. You can see what options are available by running:
+
[source,console]
----
python PlotChiAnalysis.py -h
----
+
. Now we will look at the basins. You need to tell the programe where the files are with the `-dir` flag and what the filenames are with the `-fname` flag. We will also use the `-PB` flag (short for `plot basins`) and set this to `True` so the script actually plots the basins:
+
[source,console]
----
python PlotChiAnalysis.py -dir /LSDTopoTools/data/ExampleTopoDatasets/ChiAnalysisData/Xian/ -fname Xian -PB True
----
+
. Note that you need to be in the directory `/LSDTopoTools/LSDMappingTools` for this to work. 
+
. The plotting command will make a subdirectory on your data directry called `raster_plots` and you will get a png image that looks like this:
+
.The basin keys, as a png
image::images/Xian_basins_selected_basins.png[Basins around Mount_Hua]
+
. The basins are numbered algorithmically. You can rename them if you want using the `-rename_dict` flag. This takes a list, separated by commas, where each element in the list has the original basin number, a colon (`:`) and then the new name:
+
[source,console]
----
python PlotChiAnalysis.py -dir /LSDTopoTools/data/ExampleTopoDatasets/ChiAnalysisData/Xian/ -fname Xian -PB True -rename_dict 0:yo,1:yo,2:ma
----
+
The result is:
+
.The basin keys, as a png
image::images/Xian_basins_renamed.png[Some renamed basins around Mount_Hua]
+
. And if you only want certain basins, use the `-basin_keys` flag. This is just a comma separated list of the basin numbers you want to keep. *When you use this flag it refers to the original basin numbers, so keep an image with the original basin numbering handy.*:
+
[source,console]
----
python PlotChiAnalysis.py -dir /LSDTopoTools/data/ExampleTopoDatasets/ChiAnalysisData/Xian/ -fname Xian -PB True -rename_dict 0:yo,1:yo,2:ma -basin_keys 0,1,2
----
+
The result is:
+
.The basin keys, as a png
image::images/Xian_basin_mask_renamed.png[Some selected and renamed basins around Mount_Hua]







