== Getting the software

First, you should follow the instructions on link:LSDTT_installation.html[installing *LSDTopoTools*].


=== What versions of the software are there?

The first version of our chi mapping software was released along with the http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[Mudd et al. 2014 paper] in JGR-Earth Surface. The first version ws used in a number of papers and the instructions and code are archived on http://www.csdms.org[the CSDMS website]. However it has a few drawbacks: 

* It only mapped the main stems and direct tributaries to the main stem.
* It was slow. 
* It was difficult to use, involving 4 different programs to get to the final analysis.

Since 2014 we have been working to fix these problems. The new program, which we call the *Chi Mapping Tool* retains some of the original algorithms of the 2014 paper (please http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[cite that paper] if you use it for your research!) but has a number of new features. 

* It can map across all channels in a landscape.
* It has much better routines for determining the landscape concavity ratio (and this is the subject of a new ESURF discussion paper). 
* It is all packaged into a single program rather than 4 separate programs. 
* It is very computationally intensive, so still relatively slow (compared to, say, simple slope--area analysis) but is much faster than the old version. 
* It is better integrated with our visualisation tools. I'm afraid the visualisation tools are the least well documented component of the software so please bear with us while we bring this up to a good standard. 

The instructions you see below are all for the *Chi Mapping Tool*: you should only use the older versions of the code if you want to reproduce a result from a past paper. 

=== Installing the code and setting up directories


.Easy setup quick start
**********************************************
If you just want to get started with the standard setup without any details, do the following:

. Start a Docker session using an *LSDTopoTools* docker container. If you don't know what that is, read the link:LSDTT_installation.html[installation instructions]. You probably want to use the https://hub.docker.com/r/lsdtopotools/lsdtt_pcl_docker[LSDTopoTools pcl container]. If you don't know how to start a Docker container read the link:LSDTT_installation.html[installation instructions].
. Once the docker container has started, run the script `Start_LSDTT.sh`. 
. You are ready to go!!
**********************************************

. Okay, this is not going to be much more detailed than the easy setup above. But we will quickly rehash what is in the link:LSDTT_installation.html[installation instructions].
. First, you need https://www.docker.com/products/docker-desktop[Docker] installed on your system. 
. Next, you need a directory called `LSDTopoTools`. I put mine (on Windows) in `C:\`. The directory name is *CASE SENSITIVE*.
. Once you have that you need to get the *LSDTopoTools* docker container. First open a terminal (linux,MacOS) or powershell window (Windows 10). 
. From there, run:
+
[source, console]
----
$ docker run -it -v C:\LSDTopoTools:/LSDTopoTools lsdtopotools/lsdtt_pcl_docker
----
+
IMPORTANT: in this part of the command, you need to put your own directory for LSDTopoTools in the part that says `C:\LSDTopoTools` above. 
+
. If this is your first time running this command, it will take some time to download the container. If it is not the first time, the container should start very quickly. 
. Once it starts, you will have a command prompt of `#`. 
. From there, run:
+
[source,console]
----
# Start_LSDTT.sh
----
+
. That command will download and build *LSDTopoTools* version 2. 
. You are ready to move on to the next step!

