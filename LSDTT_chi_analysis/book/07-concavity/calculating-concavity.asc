== Calculating concavity

In this section you will find instructions on using the *chi mapping tool* to calculate channel concavity. What is channel concavity? If you look at typical channels, you will find steep headwaters but as you move downstream the channels will become gentler. Authors in the middle of the twentieth century began to calculate channel slope as one moved downstream and found systematic relationships between drainage area, _A_ and channel slope, _S_, finding that the relationship could be described with stem:[S = k_s A^{-\theta}]. This relationship is often called Flint's law, after a 1975 paper. Marie Morisawa had basically figured out this relationship in the early 1960s, so we should probably all be calling this https://pubs.geoscienceworld.org/gsabulletin/article-lookup/73/9/1025[Morisawa's law]. The exponent, stem:[\theta], is called the concavity because it describes how concave the channel is: if the channel profile has little variation in slope downstream the channel has a low concavity. 

A number of authors have used channel steepness to infer either erosion and uplift rates across river networks, and these calculations often involve computing the channel concavity. This can be done in a number of ways. We at *LSDTopoTools* have included a number of methods, both traditional and newly developed, for the purpose of computing the channel concavity in river networks. In this section you will find instructions for using our tools.  

A number of models have been proposed for channel incision into bedrock, and a number of these models describe erosion as some function of slope and drainage area, and in the simplest version of these family of models, called stream power models, the concavity is related to the slope and area exponents, where erosion rate is modelled as stem:[E = k A^m S^n] and if uplift is balanced by erosion the predicted topographic outcome is stem:[\theta = m/n]. There is much debate about the appropriateness of these simple models but it is probably not controversial to say that most geomorphologists believe the concavity reflects the transport and erosion processes taking place within upland rivers. 


IMPORTANT: In this documentation, you will find references to _concavity_ or stem:[\theta] and the stem:[m/n] ratio. The concavity, stem:[\theta], is a purely geometric relationship between channel slope and drainage area. On the other hand stem:[m/n] is derived from stream power and therefore includes some assumptions about the incision model. Because chi (stem:[\chi]) can be calculated by assuming a value of stem:[\theta] topographic data, it also describes slope-area relationships, but chi analysis chi analysis also can be used to test if tributaries and trunk channels lie at the same elevation at the same values of chi. We call this a collinearity test. Linking collinearity to concavity requires some assumptions about channel incision that can be derived from Playfair's law, stating that in general tributary channels enter the main valley at the same elevation as the main channel, implying that the erosion rate of the tributary is the same as the main channel. You can read the details in our esurf manuscript or in earlier papers by https://onlinelibrary.wiley.com/doi/abs/10.1002/esp.272[Niemann et al., 2001] and https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2005JF000406[Wobus et al., 2006].

=== Before you start

Before you start, make sure you have

* Set up *LSDTopoTools* and compile it. Follow the instructions here: <<Getting the software>>
* Install the appropriate python packages. Follow the instructions here: link:LSDTT_visualisation.html#_installing_the_lsdtopotools_python_toolchain[install the python toolchain]
* Make sure your data is in the correct format (i.e., WGS1984 UTM projection, ENVI bil format). Follow instructions here: <<Preparing your data>>

include::sections/options-you-need-for-concavity.asc[]

include::sections/running-the-concavity-analysis.asc[]

include::sections/visualising-concavity-results.asc[]

include::sections/interpreting-concavity-results-including-pitfalls.asc[]

include::sections/concavity-file-outputs.asc[]

include::sections/all-options-for-concavity.asc[]

