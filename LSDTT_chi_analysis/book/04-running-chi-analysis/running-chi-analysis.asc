[appendix]
== Chi analysis options and outputs

*This section is technical and not based on tutorials!* It explains the various options and data outputs of the *chi mapping tool*. 

If you want specific examples of usage you may wish to skip to theses sections

* <<Examples of chi analysis>>
* <<Calculating concavity>>

.Important notes on how vagrant and LSDTopoTools work
***********************************************************
Most users will be running *LSDTopoTools* using https://www.vagrantup.com/[vagrant]. See the section <<Getting the software>> for details. 
These are basic notes on running *LSDTopoTools* on a vagrant server.

* The clever thing about vagrant is that you can run analyses on a Linux machine running inside you host computer (usually Windows or MacOS) but you host computer can see the files.
* *All of our programs are run within the linux server. All data files must be visible to the linux server!*
** Even though your files are the same files on the host and guest operating system, they have a different address. That is, the same file will have a Linux address and an address in your host operating system (e.g., Windows). In Linux the files are in `/LSDTopoTools/`. In you host operating system they are in the `LSDTopoTools` directory within your `VagrantBoxes` directory. You will need to remember where you but the `VagrantBoxes` directory! 
* In these instructions whenever you see the `$` prompt it means you are using the guest linux machine, which you have logged into using `putty.exe` or `ssh`, and not your host machine. 

***********************************************************

=== A typical call to lsdtt-chi-mapping

The chi analysis, and a host of other analyses, are run using the *lsdtt-chi-mapping* program. If you followed the instructions in the section <<Getting the software>> you will already have this program compiled. 

The program *lsdtt-chi-mapping* runs with two inputs when you call the program:

In the next section we will walk you though an analysis. However, reading this will help you understand where you are going, so we recommend you read the whole thing!

* You run the program from a terminal window
* You can supply the program with:
** a directory name
** a parameter file name
** both of these things
** none of these things 
* If you don't supply a parameter filename, the program will assume the parameter file is called `LSDTT_parameters.driver`
* If the parameter file doesn't exist, you will get an error message. 
+
Any of the following calls to one of the programs will work, as long as your files are in the right place:
+
[source,console]
----
$ lsdtt-chi-mapping 
$ lsdtt-chi-mapping /LSDTopoTools/data/A_project
$ lsdtt-chi-mapping AParameterFile.param
$ lsdtt-chi-mapping /LSDTopoTools/data/A_project AParameterFile.param
----

=== Text editors for modifying files

You will need to modify the parameter file in a text editor. You might also modify python scripts in a text editor. So you need to get a text editor. We use http://brackets.io/[Brackets] and https://atom.io/[Atom] (these are platform independent). Sometimes we also use http://www.pspad.com/en/[PSPad]. 

include::sections/the-parameter-file.asc[]

include::sections/output-data.asc[]